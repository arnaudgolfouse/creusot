module M_recursion_logic__variant_int
  use mach.int.Int
  
  predicate well_founded_relation [@inline:trivial] (self: int) (other: int) = self >= 0 /\ self > other
  
  meta "rewrite_def" predicate well_founded_relation
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : int
  
  function variant_int (x'0: int) : int
  
  goal vc_variant_int: x >= 0
    -> (if x = 0 then
      [@expl:variant_int ensures] 0 = x
    else
      (([@expl:variant_int requires] x - 1 >= 0) /\ well_founded_relation x (x - 1))
      /\ (variant_int (x - 1) = x - 1 -> ([@expl:variant_int ensures] 1 + variant_int (x - 1) = x))
    )
end
