module M_09_maintains__test_1 [#"09_maintains.rs" 28 0 28 36]
  let%span s09_maintains = "09_maintains.rs" 27 0 27 31
  let%span s09_maintains'0 = "09_maintains.rs" 13 8 13 12
  
  use creusot.prelude.Any
  use creusot.int.UInt64
  
  predicate invariant' [#"09_maintains.rs" 12 4 12 51] (self: ()) (b: bool) (c: UInt64.t) = [%#s09_maintains'0] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_1 [#"09_maintains.rs" 28 0 28 36] (a: ()) (b: bool) (c: UInt64.t) (return' (x: ())) =
    {[@expl:test_1 requires] [%#s09_maintains] invariant' a b c}
    (! bb0
    [ bb0 = return''0 {_0} ] [ & _0: () = Any.any_l () ])
    [ return''0 (result: ()) -> {[@expl:test_1 ensures] [%#s09_maintains] invariant' a b c} (! return' {result}) ]
end
module M_09_maintains__test_2 [#"09_maintains.rs" 31 0 31 41]
  let%span s09_maintains = "09_maintains.rs" 30 0 30 37
  let%span s09_maintains'0 = "09_maintains.rs" 13 8 13 12
  let%span sresolve = "../../../creusot-contracts/src/resolve.rs" 49 20 49 34
  
  use creusot.prelude.MutBorrow
  use creusot.prelude.Any
  use creusot.int.UInt64
  
  predicate resolve (self: MutBorrow.t ()) = [%#sresolve] self.final = self.current
  
  predicate resolve'0 (_0: MutBorrow.t ()) = resolve _0
  
  predicate invariant' [#"09_maintains.rs" 12 4 12 51] (self: ()) (b: bool) (c: UInt64.t) = [%#s09_maintains'0] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_2 [#"09_maintains.rs" 31 0 31 41] (a: MutBorrow.t ()) (b: bool) (c: UInt64.t) (return' (x: ())) =
    {[@expl:test_2 requires] [%#s09_maintains] invariant' a.current b c}
    (! bb0
    [ bb0 = s0 [ s0 = -{resolve'0 a'0}- s1 | s1 = return''0 {_0} ] ]
    [ & _0: () = Any.any_l () | & a'0: MutBorrow.t () = a ])
    [ return''0 (result: ()) -> {[@expl:test_2 ensures] [%#s09_maintains] invariant' a.final b c} (! return' {result}) ]
end
module M_09_maintains__test_3 [#"09_maintains.rs" 34 0 34 46]
  let%span s09_maintains = "09_maintains.rs" 33 0 33 41
  let%span s09_maintains'0 = "09_maintains.rs" 13 8 13 12
  let%span sresolve = "../../../creusot-contracts/src/resolve.rs" 49 20 49 34
  
  use creusot.prelude.MutBorrow
  use creusot.prelude.Any
  use creusot.int.UInt64
  
  predicate resolve (self: MutBorrow.t bool) = [%#sresolve] self.final = self.current
  
  predicate resolve'0 (_0: MutBorrow.t bool) = resolve _0
  
  predicate resolve'1 (self: MutBorrow.t ()) = [%#sresolve] self.final = self.current
  
  predicate resolve'2 (_0: MutBorrow.t ()) = resolve'1 _0
  
  predicate invariant' [#"09_maintains.rs" 12 4 12 51] (self: ()) (b: bool) (c: UInt64.t) = [%#s09_maintains'0] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_3 [#"09_maintains.rs" 34 0 34 46] (a: MutBorrow.t ()) (b: MutBorrow.t bool) (c: UInt64.t)
    (return' (x: ())) = {[@expl:test_3 requires] [%#s09_maintains] invariant' a.current b.current c}
    (! bb0
    [ bb0 = s0 [ s0 = -{resolve'0 b'0}- s1 | s1 = -{resolve'2 a'0}- s2 | s2 = return''0 {_0} ] ]
    [ & _0: () = Any.any_l () | & a'0: MutBorrow.t () = a | & b'0: MutBorrow.t bool = b ])
    [ return''0 (result: ()) -> {[@expl:test_3 ensures] [%#s09_maintains] invariant' a.final b.final c}
      (! return' {result}) ]
end
module M_09_maintains__test_5 [#"09_maintains.rs" 37 0 37 29]
  let%span s09_maintains = "09_maintains.rs" 36 0 36 28
  let%span s09_maintains'0 = "09_maintains.rs" 18 8 18 12
  
  use creusot.prelude.Any
  use creusot.int.UInt64
  use mach.int.Int
  
  predicate inv2 [#"09_maintains.rs" 17 4 17 37] (self: ()) (b: int) = [%#s09_maintains'0] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_5 [#"09_maintains.rs" 37 0 37 29] (a: ()) (b: UInt64.t) (return' (x: ())) =
    {[@expl:test_5 requires] [%#s09_maintains] inv2 a (UInt64.t'int b + 0)}
    (! bb0
    [ bb0 = return''0 {_0} ] [ & _0: () = Any.any_l () ])
    [ return''0 (result: ()) -> {[@expl:test_5 ensures] [%#s09_maintains] inv2 a (UInt64.t'int b + 0)}
      (! return' {result}) ]
end
module M_09_maintains__test_6 [#"09_maintains.rs" 40 0 40 28]
  let%span s09_maintains = "09_maintains.rs" 39 0 39 29
  let%span s09_maintains'0 = "09_maintains.rs" 24 4 24 8
  
  use creusot.prelude.Any
  
  predicate other_inv [#"09_maintains.rs" 23 0 23 39] (a: ()) (b: bool) = [%#s09_maintains'0] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_6 [#"09_maintains.rs" 40 0 40 28] (a: ()) (b: bool) (return' (x: ())) =
    {[@expl:test_6 requires] [%#s09_maintains] other_inv a b}
    (! bb0
    [ bb0 = return''0 {_0} ] [ & _0: () = Any.any_l () ])
    [ return''0 (result: ()) -> {[@expl:test_6 ensures] [%#s09_maintains] other_inv a b} (! return' {result}) ]
end
