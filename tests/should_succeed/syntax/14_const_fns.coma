module M_14_const_fns__omg
  use creusot.int.Int32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec omg (x: Int32.t) (return (x'0: Int32.t)) = {[@expl:omg requires] Int32.to_int x = 3}
    (! bb0
    [ bb0 = s0 [ s0 = Int32.sub {x} {(1: Int32.t)} (fun (_ret: Int32.t) -> [ &_0 <- _ret ] s1) | s1 = return {_0} ] ]
    [ & _0: Int32.t = Any.any_l () | & x: Int32.t = x ]) [ return (result: Int32.t) -> (! return {result}) ]
end
