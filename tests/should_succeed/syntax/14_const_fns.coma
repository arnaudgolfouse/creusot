module M_14_const_fns__omg [#"14_const_fns.rs" 5 0 5 31]
  let%span s14_const_fns = "14_const_fns.rs" 6 8 6 9
  let%span s14_const_fns'0 = "14_const_fns.rs" 4 11 4 18
  
  use creusot.int.Int32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec omg[#"14_const_fns.rs" 5 0 5 31] (x:Int32.t) (return'  (x'0:Int32.t))= {[@expl:omg requires] [%#s14_const_fns'0] Int32.to_int x
    = 3}
    (! bb0
    [ bb0 = s0
      [ s0 = Int32.sub {x'0} {[%#s14_const_fns] (1: Int32.t)} (fun (_ret:Int32.t) ->  [ &_0 <- _ret ] s1)
      | s1 = return''0 {_0} ]
     ]
    ) [ & _0: Int32.t = Any.any_l () | & x'0: Int32.t = x ]  [ return''0 (result:Int32.t)-> (! return' {result}) ] 
end
