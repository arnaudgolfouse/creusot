module M_04_assoc_prec__respect_prec [#"04_assoc_prec.rs" 12 0 12 34]
  let%span s04_assoc_prec = "04_assoc_prec.rs" 9 10 9 31
  let%span s04_assoc_prec'0 = "04_assoc_prec.rs" 10 10 10 35
  let%span s04_assoc_prec'1 = "04_assoc_prec.rs" 11 10 11 20
  
  use creusot.int.UInt32
  use mach.int.Int
  use creusot.prelude.Any
  
  type tuple  =
    { _p0: UInt32.t; _p1: UInt32.t }
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec respect_prec[#"04_assoc_prec.rs" 12 0 12 34] (x:tuple) (return'  (x'0:()))= (! bb0 [ bb0 = return''0 {_0} ] 
    [ & _0: () = Any.any_l () ]
    )
    [ return''0 (result:())-> {[@expl:respect_prec ensures #0] [%#s04_assoc_prec] 5 = 3  -> 2 + 1 = 3}
      {[@expl:respect_prec ensures #1] [%#s04_assoc_prec'0] Int.div (5 * 3) 2 <> 4 * (40 + 1)}
      {[@expl:respect_prec ensures #2] [%#s04_assoc_prec'1] x._p0 = x._p1}
      (! return' {result}) ]

end
module M_04_assoc_prec__respect_assoc [#"04_assoc_prec.rs" 15 0 15 22]
  let%span s04_assoc_prec = "04_assoc_prec.rs" 14 10 14 28
  
  use mach.int.Int
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec respect_assoc[#"04_assoc_prec.rs" 15 0 15 22] (return'  (x:()))= (! bb0 [ bb0 = return''0 {_0} ] 
    [ & _0: () = Any.any_l () ]
    ) [ return''0 (result:())-> {[@expl:respect_assoc ensures] [%#s04_assoc_prec] 0 + 1 = 0} (! return' {result}) ] 
end
