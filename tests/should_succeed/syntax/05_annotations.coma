module M_05_annotations__assertion
  use creusot.prelude.Any
  
  type t_T
  
  predicate inv (_0: t_T)
  
  predicate resolve (_0: t_T)
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec assertion (x: t_T) (return' (x'0: ())) = {[@expl:assertion 'x' type invariant] inv x}
    (! bb0
    [ bb0 = s0
      [ s0 = {[@expl:type invariant] inv x'0} s1
      | s1 = -{resolve x'0}- s2
      | s2 = {[@expl:assertion] x'0 = x'0} s3
      | s3 = bb1 ]
    | bb1 = return''0 {_0} ] [ & _0: () = Any.any_l () | & x'0: t_T = x ])
    [ return''0 (result: ()) -> (! return' {result}) ]
end
