module M_match_int__f
  use creusot.int.Int32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec f (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = [ &_1 <- (1: Int32.t) ] s1
      | s1 = [ &_2 <- Int32.le (0: Int32.t) _1 ] s2
      | s2 = any [ br0 -> {_2 = false} (! bb1) | br1 -> {_2} (! bb3) ] ]
    | bb3 = s0
      [ s0 = [ &_3 <- Int32.lt _1 (10: Int32.t) ] s1 | s1 = any [ br0 -> {_3 = false} (! bb1) | br1 -> {_3} (! bb7) ] ]
    | bb7 = any [ br0 -> {false} (! bb8) | br1 -> {true} (! bb14) ]
    | bb8 = {false} any
    | bb1 = any [ br0 -> {_1 = (5: Int32.t)} (! bb6) | br1 -> {_1 = (6: Int32.t)} (! bb6) | default -> (! bb4) ]
    | bb4 = any [ br0 -> {false = false} (! bb12) | br1 -> {false} (! bb14) ]
    | bb12 = {false} any
    | bb6 = any [ br0 -> {false = false} (! bb10) | br1 -> {false} (! bb14) ]
    | bb14 = return {_0}
    | bb10 = {false} any ]
    [ & _0: () = Any.any_l () | & _1: Int32.t = Any.any_l () | & _2: bool = Any.any_l () | & _3: bool = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
