module M_forall__f [#"forall.rs" 6 0 6 10]
  let%span sforall = "forall.rs" 5 10 5 93
  
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec f[#"forall.rs" 6 0 6 10] (return'  (x:()))= (! bb0 [ bb0 = return''0 {_0} ] ) [ & _0: () = Any.any_l () ] 
    [ return''0 (result:())-> {[@expl:f ensures] [%#sforall] forall _x: UInt32.t. true
      /\ true /\ true /\ true /\ true /\ true /\ true /\ true /\ true}
      (! return' {result}) ]

end
module M_forall__omg [#"forall.rs" 12 0 12 34]
  let%span sforall = "forall.rs" 10 11 10 17
  let%span sforall'0 = "forall.rs" 11 10 11 14
  let%span sforall'1 = "forall.rs" 14 8 14 28
  
  use mach.int.Int
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant a  : int
  
  constant b  : int
  
  predicate omg [#"forall.rs" 12 0 12 34] (a'0: int) (b'0: int)
  
  goal vc_omg: [@expl:omg ensures] [%#sforall'0] true
end
