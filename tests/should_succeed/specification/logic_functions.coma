module M_logic_functions__use_logic [#"logic_functions.rs" 10 0 10 18]
  let%span slogic_functions = "logic_functions.rs" 9 10 9 17
  let%span slogic_functions'0 = "logic_functions.rs" 6 4 6 8
  
  use creusot.prelude.Any
  
  predicate logic [#"logic_functions.rs" 5 0 5 22] = [%#slogic_functions'0] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec use_logic [#"logic_functions.rs" 10 0 10 18] (return' (x: ())) = (! bb0
    [ bb0 = return''0 {_0} ] [ & _0: () = Any.any_l () ])
    [ return''0 (result: ()) -> {[@expl:use_logic ensures] [%#slogic_functions] logic} (! return' {result}) ]
end
module M_logic_functions__use_logic_pearlite [#"logic_functions.rs" 19 0 19 27]
  let%span slogic_functions = "logic_functions.rs" 18 10 18 26
  let%span slogic_functions'0 = "logic_functions.rs" 15 16 15 22
  
  use creusot.prelude.Any
  
  predicate logic_pearlite [#"logic_functions.rs" 14 0 14 31] = [%#slogic_functions'0] 0 = 0
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec use_logic_pearlite [#"logic_functions.rs" 19 0 19 27] (return' (x: ())) = (! bb0
    [ bb0 = return''0 {_0} ] [ & _0: () = Any.any_l () ])
    [ return''0 (result: ()) -> {[@expl:use_logic_pearlite ensures] [%#slogic_functions] logic_pearlite}
      (! return' {result}) ]
end
module M_logic_functions__use_quatorze [#"logic_functions.rs" 50 0 50 21]
  let%span slogic_functions = "logic_functions.rs" 49 10 49 26
  let%span slogic_functions'0 = "logic_functions.rs" 46 4 46 6
  
  use creusot.prelude.Any
  
  constant quatorze: int = [%#slogic_functions'0] 14
  
  meta "rewrite_def" function quatorze
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec use_quatorze [#"logic_functions.rs" 50 0 50 21] (return' (x: ())) = (! bb0
    [ bb0 = return''0 {_0} ] [ & _0: () = Any.any_l () ])
    [ return''0 (result: ()) -> {[@expl:use_quatorze ensures] [%#slogic_functions] quatorze = 14} (! return' {result}) ]
end
