module M_opaque__test [#"opaque.rs" 20 0 20 13]
  let%span sopaque = "opaque.rs" 21 18 21 34
  let%span sopaque'0 = "opaque.rs" 22 18 22 40
  let%span sopaque'1 = "opaque.rs" 10 8 10 12
  let%span sopaque'2 = "opaque.rs" 16 8 16 12
  
  use creusot.prelude.Any
  
  predicate transparent [#"opaque.rs" 9 4 9 32]  =
    [%#sopaque'1] true
  
  predicate transparent_crate [#"opaque.rs" 15 4 15 38]  =
    [%#sopaque'2] true
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test[#"opaque.rs" 20 0 20 13] (return'  (x:()))= (! bb0
    [ bb0 = s0
      [ s0 = {[@expl:assertion] [%#sopaque] transparent} s1
      | s1 = {[@expl:assertion] [%#sopaque'0] transparent_crate} s2
      | s2 = return''0 {_0} ]
     ]
     [ & _0: () = Any.any_l () ] ) [ return''0 (result:())-> (! return' {result}) ] 
end
