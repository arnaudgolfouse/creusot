module M_model__test_arc [#"model.rs" 41 0 41 41]
  let%span smodel = "model.rs" 40 11 40 19
  
  use creusot.prelude.Opaque
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  type t_NonNull  =
    { t_NonNull__pointer: Opaque.ptr }
  
  type t_Arc  =
    { t_Arc__ptr: t_NonNull; t_Arc__phantom: (); t_Arc__alloc: () }
  
  function view (self: t_Arc) : UInt64.t
  
  meta "compute_max_steps" 1000000
  
  let rec test_arc[#"model.rs" 41 0 41 41] (a:t_Arc) (return'  (x:()))= {[@expl:test_arc requires] [%#smodel] UInt64.t'int (view a)
    = 0}
    (! bb0 [ bb0 = bb1 | bb1 = bb2 | bb2 = return''0 {_0} ] ) [ & _0: () = Any.any_l () ] 
    [ return''0 (result:())-> (! return' {result}) ]

end
module M_model__test_rc [#"model.rs" 44 0 44 37]
  let%span smodel = "model.rs" 43 11 43 19
  
  use creusot.prelude.Opaque
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  type t_NonNull  =
    { t_NonNull__pointer: Opaque.ptr }
  
  type t_Rc  =
    { t_Rc__ptr: t_NonNull; t_Rc__phantom: (); t_Rc__alloc: () }
  
  function view (self: t_Rc) : UInt64.t
  
  meta "compute_max_steps" 1000000
  
  let rec test_rc[#"model.rs" 44 0 44 37] (v:t_Rc) (return'  (x:()))= {[@expl:test_rc requires] [%#smodel] UInt64.t'int (view v)
    = 0}
    (! bb0 [ bb0 = bb1 | bb1 = bb2 | bb2 = return''0 {_0} ] ) [ & _0: () = Any.any_l () ] 
    [ return''0 (result:())-> (! return' {result}) ]

end
