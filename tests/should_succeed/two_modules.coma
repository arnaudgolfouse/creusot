module M_two_modules__mod2__x [#"two_modules.rs" 15 4 15 33]
  let%span stwo_modules = "two_modules.rs" 16 8 16 12
  
  use creusot.prelude.Any
  
  type t_T  =
    | C_A
    | C_B
    | C_C
  
  meta "compute_max_steps" 1000000
  
  let rec x[#"two_modules.rs" 15 4 15 33] (_t:t_T) (return'  (x'0:bool))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- [%#stwo_modules] true ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: bool = Any.any_l () ]  [ return''0 (result:bool)-> (! return' {result}) ] 
end
module M_two_modules__f [#"two_modules.rs" 22 0 22 10]
  use creusot.prelude.Any
  
  type t_T  =
    | C_A
    | C_B
    | C_C
  
  let rec x (_t:t_T) (return'  (x'0:bool))= any [ return''0 (result:bool)-> (! return' {result}) ] 
  
  meta "compute_max_steps" 1000000
  
  let rec f[#"two_modules.rs" 22 0 22 10] (return'  (x'0:()))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_2 <- C_B ] s1 | s1 = x {_2} (fun (_ret:bool) ->  [ &_1 <- _ret ] s2) | s2 = bb1 ] 
    | bb1 = return''0 {_0} ]
    ) [ & _0: () = Any.any_l () | & _1: bool = Any.any_l () | & _2: t_T = Any.any_l () ] 
    [ return''0 (result:())-> (! return' {result}) ]

end
