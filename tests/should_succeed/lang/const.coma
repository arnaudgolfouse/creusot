module M_const__foo [#"const.rs" 8 0 8 21]
  let%span sconst = "const.rs" 9 4 9 7
  let%span sconst'0 = "const.rs" 7 10 7 27
  
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec foo[#"const.rs" 8 0 8 21] (return'  (x:UInt64.t))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- [%#sconst] (42: UInt64.t) ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: UInt64.t = Any.any_l () ] 
    [ return''0 (result:UInt64.t)-> {[@expl:foo ensures] [%#sconst'0] result = (42: UInt64.t)} (! return' {result}) ]

end
