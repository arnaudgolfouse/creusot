module M_or_pat__f
  use creusot.int.Int32
  
  type t_Option = C_None | C_Some Int32.t
  
  type tuple = { _p0: t_Option; _p1: t_Option }
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : tuple
  
  function f (x'0: tuple) : Int32.t
  
  goal vc_f: match x with
      | {_p0 = C_Some x'0; _p1 = C_None} | {_p0 = C_None; _p1 = C_Some x'0} -> [@expl:f ensures] x
        = { _p0 = C_None; _p1 = C_None } -> x'0 = (1: Int32.t)
      | _ -> [@expl:f ensures] x = { _p0 = C_None; _p1 = C_None } -> (1: Int32.t) = (1: Int32.t)
      end
end
