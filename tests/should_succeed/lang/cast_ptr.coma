module M_cast_ptr__f [#"cast_ptr.rs" 4 0 4 32]
  let%span scast_ptr = "cast_ptr.rs" 5 18 5 48
  
  use creusot.prelude.Opaque
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  let rec f[#"cast_ptr.rs" 4 0 4 32] (p:Opaque.ptr) (return'  (x:()))= (! bb0
    [ bb0 = s0 [ s0 = {[@expl:assertion] [%#scast_ptr] p'0 = p'0} s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: () = Any.any_l () | & p'0: Opaque.ptr = p ]  [ return''0 (result:())-> (! return' {result}) ] 
end
module M_cast_ptr__thin [#"cast_ptr.rs" 9 0 9 41]
  let%span scast_ptr = "cast_ptr.rs" 8 10 8 33
  
  use creusot.prelude.Opaque
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  let rec thin[#"cast_ptr.rs" 9 0 9 41] (p:Opaque.ptr) (return'  (x:Opaque.ptr))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- Opaque.thin p'0 ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: Opaque.ptr = Any.any_l () | & p'0: Opaque.ptr = p ] 
    [ return''0 (result:Opaque.ptr)-> {[@expl:thin ensures] [%#scast_ptr] result = Opaque.thin p} (! return' {result}) ]

end
