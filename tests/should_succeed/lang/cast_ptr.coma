module M_cast_ptr__f
  use creusot.prelude.Any
  use creusot.prelude.Opaque
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec f (p: Opaque.ptr) (return' (x: ())) = (! bb0
    [ bb0 = s0 [ s0 = {[@expl:assertion] p'0 = p'0} s1 | s1 = return''0 {_0} ] ]
    [ & _0: () = Any.any_l () | & p'0: Opaque.ptr = p ]) [ return''0 (result: ()) -> (! return' {result}) ]
end
module M_cast_ptr__thin
  use creusot.prelude.Opaque
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec thin (p: Opaque.ptr) (return' (x: Opaque.ptr)) = (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- Opaque.thin p'0 ] s1 | s1 = return''0 {_0} ] ]
    [ & _0: Opaque.ptr = Any.any_l () | & p'0: Opaque.ptr = p ])
    [ return''0 (result: Opaque.ptr) -> {[@expl:thin ensures] result = Opaque.thin p} (! return' {result}) ]
end
