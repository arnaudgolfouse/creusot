module M_cast_ptr__f [#"cast_ptr.rs" 5 0 5 42]
  let%span scast_ptr = "cast_ptr.rs" 4 10 4 31
  
  use creusot.prelude.Opaque
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  let rec f[#"cast_ptr.rs" 5 0 5 42] (p:Opaque.ptr) (return'  (x:Opaque.ptr))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- p'0 ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0 : Opaque.ptr = Any.any_l () | & p'0 : Opaque.ptr = p ] 
    [ return''0 (result:Opaque.ptr)-> {[@expl:f ensures] [%#scast_ptr] result = p} (! return' {result}) ]

end
module M_cast_ptr__g [#"cast_ptr.rs" 10 0 10 42]
  let%span scast_ptr = "cast_ptr.rs" 9 10 9 33
  
  use creusot.prelude.Opaque
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  let rec g[#"cast_ptr.rs" 10 0 10 42] (p:Opaque.ptr) (return'  (x:Opaque.ptr))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- p'0 ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0 : Opaque.ptr = Any.any_l () | & p'0 : Opaque.ptr = p ] 
    [ return''0 (result:Opaque.ptr)-> {[@expl:g ensures] [%#scast_ptr] result = p} (! return' {result}) ]

end
