module M_promoted_constants__promoted_none
  use creusot.int.Int32
  use creusot.prelude.Any
  
  type t_Option = C_None | C_Some Int32.t
  
  type tuple = { _p0: t_Option; _p1: t_Option }
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec promoted_none (return' (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = [ &_ix <- C_Some (0: Int32.t) ] s1
      | s1 = bb0'0
        [ bb0'0 = s0'0
          [ s0'0 = [ &_1 <- C_Some (42: Int32.t) ] s1'0 | s1'0 = [ &_0'0 <- _1 ] s2'0 | s2'0 = _const_ret {_0'0} ] ]
        [ & _0'0: t_Option = Any.any_l () | & _1: t_Option = Any.any_l () ]
        [ _const_ret (_const: t_Option) -> [ &_11 <- _const ] s2 ]
      | s2 = bb0'0
        [ bb0'0 = s0'0
          [ s0'0 = [ &_1 <- C_Some (43: Int32.t) ] s1'0 | s1'0 = [ &_0'0 <- _1 ] s2'0 | s2'0 = _const_ret {_0'0} ] ]
        [ & _0'0: t_Option = Any.any_l () | & _1: t_Option = Any.any_l () ]
        [ _const_ret (_const: t_Option) -> [ &_10 <- _const ] s3 ]
      | s3 = [ &_2 <- { _p0 = _11; _p1 = _10 } ] s4
      | s4 = any [ br0 -> {_2._p0 = C_None} (! bb2) | br1 (x0: Int32.t) -> {_2._p0 = C_Some x0} (! bb1) ] ]
    | bb2 = any [ br0 -> {_2._p1 = C_None} (! bb4) | br1 (x0: Int32.t) -> {_2._p1 = C_Some x0} (! bb1) ]
    | bb1 = return''0 {_0}
    | bb4 = {false} any ]
    [ & _0: () = Any.any_l ()
    | & _ix: t_Option = Any.any_l ()
    | & _2: tuple = Any.any_l ()
    | & _10: t_Option = Any.any_l ()
    | & _11: t_Option = Any.any_l () ]) [ return''0 (result: ()) -> (! return' {result}) ]
end
module M_promoted_constants__promoted_int
  use creusot.int.Int32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec promoted_int (return' (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = bb0'0
        [ bb0'0 = s0'0
          [ s0'0 = Int32.add {(1: Int32.t)} {(5: Int32.t)} (fun (_ret: Int32.t) -> [ &_2 <- _ret ] s1'0)
          | s1'0 = Int32.add {_2} {(10: Int32.t)} (fun (_ret: Int32.t) -> [ &_1 <- _ret ] s2'0)
          | s2'0 = [ &_0'0 <- _1 ] s3'0
          | s3'0 = _const_ret {_0'0} ] ]
        [ & _0'0: Int32.t = Any.any_l () | & _1: Int32.t = Any.any_l () | & _2: Int32.t = Any.any_l () ]
        [ _const_ret (_const: Int32.t) -> [ &_9 <- _const ] s1 ]
      | s1 = [ &ix <- _9 ] s2
      | s2 = [ &_4 <- ix <> (16: Int32.t) ] s3
      | s3 = any [ br0 -> {_4 = false} (! bb2) | br1 -> {_4} (! bb1) ] ]
    | bb1 = {false} any
    | bb2 = return''0 {_0} ]
    [ & _0: () = Any.any_l ()
    | & ix: Int32.t = Any.any_l ()
    | & _4: bool = Any.any_l ()
    | & _9: Int32.t = Any.any_l () ]) [ return''0 (result: ()) -> (! return' {result}) ]
end
module M_promoted_constants__string
  use creusot.prelude.Any
  use creusot.prelude.Opaque
  use creusot.int.UInt64
  
  type t_NonNull = { t_NonNull__pointer: Opaque.ptr }
  
  type t_Unique = { t_Unique__pointer: t_NonNull; t_Unique__qy95zmarker: () }
  
  type t_UsizeNoHighBit = { t_UsizeNoHighBit__0: UInt64.t }
  
  type t_RawVecInner = { t_RawVecInner__ptr: t_Unique; t_RawVecInner__cap: t_UsizeNoHighBit; t_RawVecInner__alloc: () }
  
  type t_RawVec = { t_RawVec__inner: t_RawVecInner; t_RawVec__qy95zmarker: () }
  
  type t_Vec = { t_Vec__buf: t_RawVec; t_Vec__len: UInt64.t }
  
  type t_String = { t_String__vec: t_Vec }
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec string' (_s: t_String) (return' (x: ())) = (! bb0
    [ bb0 = bb1 | bb1 = return''0 {_0} ] [ & _0: () = Any.any_l () ]) [ return''0 (result: ()) -> (! return' {result}) ]
end
module M_promoted_constants__str
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec str (return' (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 =
        [ &_s <- "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" ]
        s1
      | s1 = return''0 {_0} ] ] [ & _0: () = Any.any_l () | & _s: string = Any.any_l () ])
    [ return''0 (result: ()) -> (! return' {result}) ]
end
