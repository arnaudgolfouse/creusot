<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="17_filter.coma"/>
<theory name="M_17_filter__qyi4935072013270782883__resolve_coherence__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="1"><result status="valid" time="0.010001" steps="2"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi4935072013270782883__resolve_coherence" proved="true">
 <goal name="vc_resolve_coherence" proved="true">
 <proof prover="0"><result status="valid" time="0.011302" steps="108"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi6180221713105948918__produces_refl__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="0"><result status="valid" time="0.007065" steps="766"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi6180221713105948918__produces_refl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <proof prover="0"><result status="valid" time="0.023759" steps="28907"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi6180221713105948918__produces_trans__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.022813" steps="1280"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi6180221713105948918__produces_trans" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.036032" steps="4245"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="destruct_rec" proved="true" arg1="H3">
    <goal name="vc_produces_trans.0.1.0" expl="destruct premise" proved="true">
    <proof prover="1"><result status="valid" time="0.010507" steps="4"/></proof>
    </goal>
    <goal name="vc_produces_trans.0.1.1" proved="true">
    <transf name="destruct_rec" proved="true" arg1="H1">
     <goal name="vc_produces_trans.0.1.1.0" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.028061" steps="8"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.1.1" proved="true">
     <transf name="exists" proved="true" arg1="(s1++s)">
      <goal name="vc_produces_trans.0.1.1.1.0" proved="true">
      <transf name="exists" proved="true" arg1="(fun i -&gt; if i &lt; length ab then f1 i else (f (i - length ab) + length s1))">
       <goal name="vc_produces_trans.0.1.1.1.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_trans.0.1.1.1.0.0.0" proved="true">
        <proof prover="2"><result status="valid" time="0.028923" steps="5657"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.1.1.0.0.1" proved="true">
        <proof prover="2"><result status="valid" time="0.041190" steps="7093"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.1.1.0.0.2" proved="true">
        <proof prover="2"><result status="valid" time="0.048508" steps="8588"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.1.1.0.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.046961" steps="5334"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.1.1.0.0.4" proved="true">
        <proof prover="2"><result status="valid" time="0.056215" steps="9271"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.1.1.0.0.5" proved="true">
        <proof prover="3"><result status="valid" time="0.060729" steps="7958"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.1.1.0.0.6" proved="true">
        <transf name="case" proved="true" arg1="(i &lt; length s1)">
         <goal name="vc_produces_trans.0.1.1.1.0.0.6.0" expl="true case" proved="true">
         <proof prover="3"><result status="valid" time="0.040025" steps="7928"/></proof>
         </goal>
         <goal name="vc_produces_trans.0.1.1.1.0.0.6.1" expl="false case" proved="true">
         <transf name="instantiate" proved="true" arg1="H4" arg2="(i-length s1)">
          <goal name="vc_produces_trans.0.1.1.1.0.0.6.1.0" expl="false case" proved="true">
          <transf name="replace" proved="true" arg1="(b.t_Filter__func)" arg2="(a.t_Filter__func)" arg3="in" arg4="Hinst">
           <goal name="vc_produces_trans.0.1.1.1.0.0.6.1.0.0" expl="false case" proved="true">
           <proof prover="1"><result status="valid" time="0.014557" steps="204"/></proof>
           </goal>
           <goal name="vc_produces_trans.0.1.1.1.0.0.6.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="2"><result status="valid" time="0.023954" steps="6061"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi6180221713105948918__next__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="2"><result status="valid" time="0.020849" steps="4023"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi6180221713105948918__next" proved="true">
 <goal name="vc_next&#39;0" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_next&#39;0.0" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.080660" steps="5701"/></proof>
  </goal>
  <goal name="vc_next&#39;0.1" expl="loop invariant #2" proved="true">
  <proof prover="1"><result status="valid" time="0.021449" steps="10"/></proof>
  </goal>
  <goal name="vc_next&#39;0.2" expl="loop invariant #3" proved="true">
  <proof prover="2"><result status="valid" time="0.041129" steps="7377"/></proof>
  </goal>
  <goal name="vc_next&#39;0.3" expl="loop invariant #4" proved="true">
  <proof prover="1"><result status="valid" time="0.024887" steps="8"/></proof>
  </goal>
  <goal name="vc_next&#39;0.4" proved="true">
  <proof prover="0"><result status="valid" time="0.008668" steps="26823"/></proof>
  </goal>
  <goal name="vc_next&#39;0.5" expl="next requires" proved="true">
  <proof prover="3"><result status="valid" time="0.033824" steps="5135"/></proof>
  </goal>
  <goal name="vc_next&#39;0.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.011883" steps="31"/></proof>
  </goal>
  <goal name="vc_next&#39;0.7" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.026193" steps="5899"/></proof>
  </goal>
  <goal name="vc_next&#39;0.8" expl="next result type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.060684" steps="4689"/></proof>
  </goal>
  <goal name="vc_next&#39;0.9" expl="next ensures" proved="true">
  <proof prover="1"><result status="valid" time="0.026453" steps="72"/></proof>
  </goal>
  <goal name="vc_next&#39;0.10" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_next&#39;0.10.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.017811" steps="107168"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next&#39;0.11" proved="true">
  <proof prover="2"><result status="valid" time="0.026545" steps="10848"/></proof>
  </goal>
  <goal name="vc_next&#39;0.12" expl="call_mut &#39;self_&#39; type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.041927" steps="5657"/></proof>
  </goal>
  <goal name="vc_next&#39;0.13" expl="call_mut &#39;arg&#39; type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.008199" steps="101"/></proof>
  </goal>
  <goal name="vc_next&#39;0.14" expl="call_mut requires" proved="true">
  <proof prover="0"><result status="valid" time="0.008675" steps="41331"/></proof>
  </goal>
  <goal name="vc_next&#39;0.15" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.031935" steps="96"/></proof>
  </goal>
  <goal name="vc_next&#39;0.16" expl="mut invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.049146" steps="8751"/></proof>
  </goal>
  <goal name="vc_next&#39;0.17" expl="loop invariant #0" proved="true">
  <proof prover="2"><result status="valid" time="0.020893" steps="13363"/></proof>
  </goal>
  <goal name="vc_next&#39;0.18" expl="loop invariant #1" proved="true">
  <proof prover="3"><result status="valid" time="0.026010" steps="6295"/></proof>
  </goal>
  <goal name="vc_next&#39;0.19" expl="loop invariant #2" proved="true">
  <proof prover="3"><result status="valid" time="0.031574" steps="7428"/></proof>
  </goal>
  <goal name="vc_next&#39;0.20" expl="loop invariant #3" proved="true">
  <proof prover="1"><result status="valid" time="0.017063" steps="42"/></proof>
  </goal>
  <goal name="vc_next&#39;0.21" expl="loop invariant #4" proved="true">
  <proof prover="2"><result status="valid" time="0.044338" steps="8866"/></proof>
  </goal>
  <goal name="vc_next&#39;0.22" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.024097" steps="6270"/></proof>
  </goal>
  <goal name="vc_next&#39;0.23" expl="next result type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.022458" steps="8822"/></proof>
  </goal>
  <goal name="vc_next&#39;0.24" expl="next ensures" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_next&#39;0.24.0" expl="next ensures" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_next&#39;0.24.0.0" expl="next ensures" proved="true">
    <proof prover="2"><result status="valid" time="0.031936" steps="9688"/></proof>
    </goal>
    <goal name="vc_next&#39;0.24.0.1" expl="next ensures" proved="true">
    <transf name="exists" proved="true" arg1="(snoc produced field_0)">
     <goal name="vc_next&#39;0.24.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun (_ : int) -&gt; length produced)">
      <goal name="vc_next&#39;0.24.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_next&#39;0.24.0.1.0.0.0" proved="true">
       <proof prover="3"><result status="valid" time="0.020345" steps="5325"/></proof>
       </goal>
       <goal name="vc_next&#39;0.24.0.1.0.0.1" proved="true">
       <proof prover="1"><result status="valid" time="0.016014" steps="113"/></proof>
       </goal>
       <goal name="vc_next&#39;0.24.0.1.0.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.035496" steps="7258"/></proof>
       </goal>
       <goal name="vc_next&#39;0.24.0.1.0.0.3" proved="true">
       <proof prover="2"><result status="valid" time="0.049796" steps="10903"/></proof>
       </goal>
       <goal name="vc_next&#39;0.24.0.1.0.0.4" proved="true">
       <proof prover="1"><result status="valid" time="0.021269" steps="68"/></proof>
       </goal>
       <goal name="vc_next&#39;0.24.0.1.0.0.5" proved="true">
       <proof prover="3"><result status="valid" time="0.038268" steps="7733"/></proof>
       </goal>
       <goal name="vc_next&#39;0.24.0.1.0.0.6" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="vc_next&#39;0.24.0.1.0.0.6.0" proved="true">
        <proof prover="2"><result status="valid" time="0.043367" steps="12272"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next&#39;0.25" proved="true">
  <proof prover="1"><result status="valid" time="0.021372" steps="25"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__filter" proved="true">
 <goal name="vc_filter" proved="true">
 <proof prover="0"><result status="valid" time="0.000001" steps="12004"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__less_than" proved="true">
 <goal name="vc_closure2" proved="true">
 <proof prover="3"><result status="valid" time="0.021182" steps="4525"/></proof>
 </goal>
 <goal name="vc_less_than" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_less_than.0" expl="filter requires #0" proved="true">
  <proof prover="1"><result status="valid" time="0.016673" steps="12"/></proof>
  </goal>
  <goal name="vc_less_than.1" expl="filter requires #1" proved="true">
  <proof prover="2"><result status="valid" time="0.030165" steps="9947"/></proof>
  </goal>
  <goal name="vc_less_than.2" expl="filter requires #2" proved="true">
  <proof prover="2"><result status="valid" time="0.033606" steps="10268"/></proof>
  </goal>
  <goal name="vc_less_than.3" expl="collect &#39;self_&#39; type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.009194" steps="3068"/></proof>
  </goal>
  <goal name="vc_less_than.4" expl="less_than ensures #0" proved="true">
  <proof prover="2"><result status="valid" time="0.061310" steps="17026"/></proof>
  </goal>
  <goal name="vc_less_than.5" expl="less_than ensures #1" proved="true">
  <proof prover="1"><result status="valid" time="0.793314" steps="12873"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
