<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.15.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.3.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_impl_Iterator_for_Map_I_F__produces_refl" proved="true">
 <goal name="vc_produces_refl_Map_I_F" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_refl_Map_I_F.0" expl="produces_refl ensures" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="vc_produces_refl_Map_I_F.0.0" expl="produces_refl ensures" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_refl_Map_I_F.0.0.0" proved="true">
    <proof prover="4"><result status="valid" time="0.039235" steps="2915"/></proof>
    </goal>
    <goal name="vc_produces_refl_Map_I_F.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(empty: seq (t t_F))">
     <goal name="vc_produces_refl_Map_I_F.0.0.1.0" proved="true">
     <proof prover="3"><result status="valid" time="0.027022" steps="263"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_impl_Iterator_for_Map_I_F__produces_trans" proved="true">
 <goal name="vc_produces_trans_Map_I_F" proved="true">
 <transf name="compute_specified" proved="true" >
  <goal name="vc_produces_trans_Map_I_F.0" expl="produces_trans ensures" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans_Map_I_F.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.026228" steps="48"/></proof>
   </goal>
   <goal name="vc_produces_trans_Map_I_F.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(fs1++fs)">
    <goal name="vc_produces_trans_Map_I_F.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans_Map_I_F.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.028621" steps="41"/></proof>
     </goal>
     <goal name="vc_produces_trans_Map_I_F.0.1.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(s1++s)">
      <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.0" proved="true">
       <proof prover="4"><result status="valid" time="0.051671" steps="7366"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.023756" steps="35"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.100306" steps="613"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.3" proved="true">
       <proof prover="3"><result status="valid" time="0.067970" steps="232"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.4" proved="true">
       <proof prover="0"><result status="valid" time="0.053272" steps="13797"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.5" proved="true">
       <proof prover="4"><result status="valid" time="0.096235" steps="12006"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.6" proved="true">
       <proof prover="3"><result status="valid" time="0.037413" steps="116"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.7" proved="true">
       <proof prover="4"><result status="valid" time="0.305593" steps="42586"/></proof>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.8" proved="true">
       <transf name="instantiate" proved="true" arg1="H10" arg2="i">
        <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.8.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H2" arg2="(i-length ab)">
         <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.8.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.8.0.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.542620" steps="3546"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.9" proved="true">
       <transf name="instantiate" proved="true" arg1="H10" arg2="i">
        <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.9.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H2" arg2="(i-length ab)">
         <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.9.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans_Map_I_F.0.1.0.1.0.9.0.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.520836" steps="3604"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_impl_Iterator_for_Map_I_F__next" proved="true">
 <goal name="vc_next_Map_I_F" proved="true">
 <proof prover="0"><result status="valid" time="0.334382" steps="29170"/></proof>
 </goal>
</theory>
<theory name="M_impl_Map_I_F__preservation_inv" proved="true">
 <goal name="vc_preservation_inv_I" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv_I.0" expl="preservation_inv ensures" proved="true">
  <proof prover="3"><result status="valid" time="3.734479" steps="36604"/></proof>
  <proof prover="4"><result status="valid" time="0.181909" steps="12759"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_impl_Map_I_F__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant_I" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant_I.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant_I.0.0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.173931" steps="1973"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant_I.0.1" expl="produces_one_invariant ensures #0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.043121" steps="258"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant_I.0.2" expl="produces_one_invariant ensures #1" proved="true">
   <proof prover="4" timelimit="1"><result status="valid" time="0.131177" steps="17824"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_impl_Map_I_F__produces_one" proved="true">
 <goal name="vc_produces_one_I" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one_I.0" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="vc_produces_one_I.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_one_I.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.059710" steps="16980"/></proof>
    </goal>
    <goal name="vc_produces_one_I.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(singleton f)">
     <goal name="vc_produces_one_I.0.0.1.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_one_I.0.0.1.0.0" proved="true">
      <proof prover="3"><result status="valid" time="0.030545" steps="19"/></proof>
      </goal>
      <goal name="vc_produces_one_I.0.0.1.0.1" proved="true">
      <transf name="exists" proved="true" arg1="(singleton e)">
       <goal name="vc_produces_one_I.0.0.1.0.1.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_one_I.0.0.1.0.1.0.0" proved="true">
        <proof prover="4"><result status="valid" time="0.050874" steps="9408"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.1" proved="true">
        <proof prover="2"><result status="valid" time="0.007810" steps="6373"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.2" proved="true">
        <proof prover="0"><result status="valid" time="0.345676" steps="51149"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.034678" steps="22"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.4" proved="true">
        <proof prover="3"><result status="valid" time="0.030891" steps="18"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.5" proved="true">
        <proof prover="4"><result status="valid" time="0.064782" steps="9679"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.6" proved="true">
        <proof prover="0"><result status="valid" time="0.153125" steps="28430"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.7" proved="true">
        <proof prover="3"><result status="valid" time="0.035779" steps="29"/></proof>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.8" proved="true">
        <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
         <goal name="vc_produces_one_I.0.0.1.0.1.0.8.0" proved="true">
         <proof prover="3"><result status="valid" time="0.084383" steps="340"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_one_I.0.0.1.0.1.0.9" proved="true">
        <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
         <goal name="vc_produces_one_I.0.0.1.0.1.0.9.0" proved="true">
         <proof prover="0"><result status="valid" time="0.157967" steps="34245"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one_I.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one_I.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.094146" steps="264093"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_map" proved="true">
 <goal name="vc_map_I" proved="true">
 <proof prover="4"><result status="valid" time="0.079465" steps="4153"/></proof>
 </goal>
</theory>
<theory name="M_identity" proved="true">
 <goal name="vc_identity_I" proved="true">
 <proof prover="4"><result status="valid" time="0.086755" steps="3822"/></proof>
 </goal>
</theory>
<theory name="M_increment" proved="true">
 <goal name="vc_increment_U" proved="true">
 <proof prover="2"><result status="valid" time="0.209086" steps="304524"/></proof>
 </goal>
</theory>
<theory name="M_counter" proved="true">
 <goal name="vc_counter_I" proved="true">
 <proof prover="0"><result status="valid" time="0.293258" steps="31711"/></proof>
 </goal>
</theory>
<theory name="M_impl_Iterator_for_Map_I_F__next__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="2"><result status="valid" time="0.114363" steps="131335"/></proof>
 </goal>
</theory>
<theory name="M_impl_Iterator_for_Map_I_F__produces_refl__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="4"><result status="valid" time="0.062936" steps="1390"/></proof>
 </goal>
</theory>
<theory name="M_impl_Iterator_for_Map_I_F__produces_trans__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.024073" steps="0"/></proof>
 </goal>
</theory>
</file>
</why3session>
