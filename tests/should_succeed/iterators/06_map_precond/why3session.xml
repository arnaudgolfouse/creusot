<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_06_map_precond__qyi6490470836283789663__resolve_coherence__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.011076" steps="2"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi6490470836283789663__resolve_coherence" proved="true">
 <goal name="vc_resolve_coherence" proved="true">
 <proof prover="4"><result status="valid" time="0.011181" steps="1543"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi13778860181180212516__produces_refl__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="4"><result status="valid" time="0.014849" steps="1280"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi13778860181180212516__produces_refl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_refl.0" expl="produces_refl ensures" proved="true">
  <proof prover="4"><result status="valid" time="0.043713" steps="11158"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi13778860181180212516__produces_trans__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="4"><result status="valid" time="0.019136" steps="1280"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi13778860181180212516__produces_trans" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="3"><result status="valid" time="0.013506" steps="48"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(fs1++fs)">
    <goal name="vc_produces_trans.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.1.0.0" proved="true">
     <proof prover="3"><result status="valid" time="0.014256" steps="41"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(s1++s)">
      <goal name="vc_produces_trans.0.1.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.1.0.1.0.0" proved="true">
       <proof prover="4"><result status="valid" time="0.037305" steps="9413"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.023019" steps="35"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.052442" steps="613"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.3" proved="true">
       <proof prover="3"><result status="valid" time="0.042053" steps="232"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.4" proved="true">
       <proof prover="0"><result status="valid" time="0.047997" steps="13843"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.5" proved="true">
       <proof prover="4"><result status="valid" time="0.056307" steps="10397"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.6" proved="true">
       <proof prover="3"><result status="valid" time="0.026640" steps="116"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.7" proved="true">
       <proof prover="4"><result status="valid" time="0.233075" steps="17346"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.8" proved="true">
       <transf name="instantiate" proved="true" arg1="H10" arg2="i">
        <goal name="vc_produces_trans.0.1.0.1.0.8.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H2" arg2="(i-length ab)">
         <goal name="vc_produces_trans.0.1.0.1.0.8.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.1.0.8.0.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.663590" steps="3551"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="vc_produces_trans.0.1.0.1.0.9" proved="true">
       <transf name="instantiate" proved="true" arg1="H10" arg2="i">
        <goal name="vc_produces_trans.0.1.0.1.0.9.0" proved="true">
        <transf name="instantiate" proved="true" arg1="H2" arg2="(i-length ab)">
         <goal name="vc_produces_trans.0.1.0.1.0.9.0.0" proved="true">
         <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
          <goal name="vc_produces_trans.0.1.0.1.0.9.0.0.0" proved="true">
          <proof prover="3"><result status="valid" time="0.846605" steps="3601"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi13778860181180212516__next__refines" proved="true">
 <goal name="refines" proved="true">
 <proof prover="3"><result status="valid" time="0.100476" steps="992"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi13778860181180212516__next" proved="true">
 <goal name="vc_next&#39;0" proved="true">
 <proof prover="4"><result status="valid" time="0.132804" steps="19969"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi10069788794515621353__preservation_inv" proved="true">
 <goal name="vc_preservation_inv" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv.0" expl="preservation_inv ensures" proved="true">
  <proof prover="4"><result status="valid" time="0.164717" steps="14350"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi10069788794515621353__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.220498" steps="1971"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" expl="produces_one_invariant ensures #0" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.024802" steps="258"/></proof>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" expl="produces_one_invariant ensures #1" proved="true">
   <proof prover="4" timelimit="1"><result status="valid" time="0.340344" steps="28709"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi10069788794515621353__produces_one" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0">
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_one.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.027614" steps="10364"/></proof>
    </goal>
    <goal name="vc_produces_one.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(singleton f)">
     <goal name="vc_produces_one.0.0.1.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_one.0.0.1.0.0" proved="true">
      <proof prover="3"><result status="valid" time="0.018804" steps="19"/></proof>
      </goal>
      <goal name="vc_produces_one.0.0.1.0.1" proved="true">
      <transf name="exists" proved="true" arg1="(singleton e)">
       <goal name="vc_produces_one.0.0.1.0.1.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_one.0.0.1.0.1.0.0" proved="true">
        <proof prover="4"><result status="valid" time="0.164101" steps="12736"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.1" proved="true">
        <proof prover="2"><result status="valid" time="0.015179" steps="3993"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.2" proved="true">
        <proof prover="0"><result status="valid" time="0.160299" steps="14544"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.028285" steps="22"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.4" proved="true">
        <proof prover="3"><result status="valid" time="0.018138" steps="18"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.5" proved="true">
        <proof prover="4"><result status="valid" time="0.137556" steps="11126"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.6" proved="true">
        <proof prover="0"><result status="valid" time="0.219552" steps="21960"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.7" proved="true">
        <proof prover="3"><result status="valid" time="0.017979" steps="29"/></proof>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.8" proved="true">
        <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
         <goal name="vc_produces_one.0.0.1.0.1.0.8.0" proved="true">
         <proof prover="3"><result status="valid" time="0.031883" steps="340"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_one.0.0.1.0.1.0.9" proved="true">
        <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
         <goal name="vc_produces_one.0.0.1.0.1.0.9.0" proved="true">
         <proof prover="0"><result status="valid" time="0.246138" steps="28237"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="2"><result status="valid" time="0.177684" steps="239718"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__map" proved="true">
 <goal name="vc_map" proved="true">
 <proof prover="4"><result status="valid" time="0.034690" steps="4422"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity" proved="true">
 <goal name="vc_identity" proved="true">
 <proof prover="3"><result status="valid" time="0.016418" steps="122"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment" proved="true">
 <goal name="vc_increment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment.0" expl="map &#39;iter&#39; type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.031759" steps="10597"/></proof>
  </goal>
  <goal name="vc_increment.1" expl="map requires #0" proved="true">
  <proof prover="3"><result status="valid" time="0.018115" steps="74"/></proof>
  </goal>
  <goal name="vc_increment.2" expl="map requires #1" proved="true">
  <proof prover="0"><result status="valid" time="0.095242" steps="22127"/></proof>
  </goal>
  <goal name="vc_increment.3" expl="map requires #2" proved="true">
  <proof prover="3"><result status="valid" time="0.028819" steps="202"/></proof>
  </goal>
  <goal name="vc_increment.4" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.046241" steps="10607"/></proof>
  </goal>
  <goal name="vc_increment.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.041636" steps="134485"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__counter" proved="true">
 <goal name="vc_counter" proved="true">
 <proof prover="3"><result status="valid" time="0.314760" steps="1744"/></proof>
 </goal>
</theory>
</file>
</why3session>
