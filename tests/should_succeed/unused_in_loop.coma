module M_unused_in_loop__unused_in_loop
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec unused_in_loop (b: bool) (return' (x: UInt32.t)) = (! bb0
    [ bb0 = s0 [ s0 = [ &x <- (10: UInt32.t) ] s1 | s1 = bb1 ]
    | bb1 = bb1'0
      [ bb1'0 = {[@expl:loop invariant] true}
        (! s0)
        [ s0 = bb2 ]
        [ bb2 = any [ br0 -> {b'0 = false} (! bb1'0) | br1 -> {b'0} (! bb3) ] ] ]
    | bb3 = s0 [ s0 = [ &_0 <- x ] s1 | s1 = return''0 {_0} ] ]
    [ & _0: UInt32.t = Any.any_l () | & b'0: bool = b | & x: UInt32.t = Any.any_l () ])
    [ return''0 (result: UInt32.t) -> {[@expl:unused_in_loop ensures] result = (10: UInt32.t)} (! return' {result}) ]
end
