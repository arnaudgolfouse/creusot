module M_drop_pair
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  type tup2_ref_u32_ref_u32 = { f0: MutBorrow.t UInt32.t; f1: MutBorrow.t UInt32.t }
  
  predicate resolve_ref_u32 [@inline:trivial] (_1: MutBorrow.t UInt32.t) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_u32
  
  predicate resolve_tup2_ref_u32_ref_u32 [@inline:trivial] (_1: tup2_ref_u32_ref_u32) =
    resolve_ref_u32 _1.f0 /\ resolve_ref_u32 _1.f1
  
  meta "rewrite_def" predicate resolve_tup2_ref_u32_ref_u32
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec drop_pair (_x: tup2_ref_u32_ref_u32) (return (x: ())) = (! bb0
    [ bb0 = s0 [ s0 = -{resolve_tup2_ref_u32_ref_u32 _x}- s1 | s1 = return {_0} ] ]
    [ & _0: () = Any.any_l () | & _x: tup2_ref_u32_ref_u32 = _x ])
    [ return (result: ()) -> {[@expl:drop_pair ensures #0] resolve_tup2_ref_u32_ref_u32 _x}
      {[@expl:drop_pair ensures #1] _x.f0.final = _x.f0.current}
      {[@expl:drop_pair ensures #2] _x.f1.final = _x.f1.current}
      (! return {result}) ]
end
module M_drop_pair2
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  type tup2_ref_u32_ref_u32 = { f0: MutBorrow.t UInt32.t; f1: MutBorrow.t UInt32.t }
  
  predicate resolve_ref_u32 [@inline:trivial] (_1: MutBorrow.t UInt32.t) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_u32
  
  predicate resolve_tup2_ref_u32_ref_u32 [@inline:trivial] (_1: tup2_ref_u32_ref_u32) =
    resolve_ref_u32 _1.f0 /\ resolve_ref_u32 _1.f1
  
  meta "rewrite_def" predicate resolve_tup2_ref_u32_ref_u32
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec drop_pair2 (x: tup2_ref_u32_ref_u32) (return (x'0: ())) = (! bb0
    [ bb0 = s0 [ s0 = -{resolve_tup2_ref_u32_ref_u32 x}- s1 | s1 = return {_0} ] ]
    [ & _0: () = Any.any_l () | & x: tup2_ref_u32_ref_u32 = x ]) [ return (result: ()) -> (! return {result}) ]
end
module M_drop
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  predicate resolve_ref_u32 [@inline:trivial] (_1: MutBorrow.t UInt32.t) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_u32
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec drop (_x: MutBorrow.t UInt32.t) (y: MutBorrow.t UInt32.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = -{resolve_ref_u32 _x}- s1
      | s1 = MutBorrow.borrow_final <UInt32.t> {y.current} {MutBorrow.get_id y}
          (fun (_ret: MutBorrow.t UInt32.t) -> [ &_3 <- _ret ] [ &y <- { y with current = _ret.final } ] s2)
      | s2 = [ &_x <- _3 ] s3
      | s3 = -{resolve_ref_u32 _x}- s4
      | s4 = -{resolve_ref_u32 y}- s5
      | s5 = return {_0} ] ]
    [ & _0: () = Any.any_l ()
    | & _x: MutBorrow.t UInt32.t = _x
    | & y: MutBorrow.t UInt32.t = y
    | & _3: MutBorrow.t UInt32.t = Any.any_l () ]) [ return (result: ()) -> (! return {result}) ]
end
