module M_test1
  use creusot.int.UInt32
  
  type t_F
  
  predicate postcondition_once_F (self: t_F) (args: UInt32.t) (result: bool)
  
  predicate resolve_F (_1: t_F)
  
  predicate postcondition_mut_F (self: t_F) (args: UInt32.t) (result_state: t_F) (result: bool)
  
  function fn_mut_once_F (self: t_F) (args: UInt32.t) (res: bool) : ()
  
  axiom fn_mut_once_F_spec: forall self: t_F, args: UInt32.t, res: bool. postcondition_once_F self args res
      = (exists res_state: t_F. postcondition_mut_F self args res_state res /\ resolve_F res_state)
  
  predicate hist_inv_F (self: t_F) (result_state: t_F)
  
  function hist_inv_trans_F (self: t_F) (b: t_F) (c: t_F) : ()
  
  axiom hist_inv_trans_F_spec: forall self: t_F, b: t_F, c: t_F. hist_inv_F self b
      -> hist_inv_F b c -> hist_inv_F self c
  
  function hist_inv_refl_F (self: t_F) : ()
  
  axiom hist_inv_refl_F_spec: forall self: t_F. hist_inv_F self self
  
  function postcondition_mut_hist_inv_F (self: t_F) (args: UInt32.t) (res_state: t_F) (res: bool) : ()
  
  axiom postcondition_mut_hist_inv_F_spec:
    forall self: t_F, args: UInt32.t, res_state: t_F, res: bool. postcondition_mut_F self args res_state res
      -> hist_inv_F self res_state
  
  function fn_hist_inv_F (self: t_F) (res_state: t_F) : ()
  
  axiom fn_hist_inv_F_spec: forall self: t_F, res_state: t_F. hist_inv_F self res_state = (self = res_state)
  
  predicate postcondition_F (self: t_F) (args: UInt32.t) (result: bool)
  
  function fn_once_F (self: t_F) (args: UInt32.t) (res: bool) : ()
  
  axiom fn_once_F_spec: forall self: t_F, args: UInt32.t, res: bool. postcondition_once_F self args res
      = (postcondition_F self args res /\ resolve_F self)
  
  function fn_mut_F (self: t_F) (args: UInt32.t) (res_state: t_F) (res: bool) : ()
  
  axiom fn_mut_F_spec:
    forall self: t_F, args: UInt32.t, res_state: t_F, res: bool. postcondition_mut_F self args res_state res
      = (postcondition_F self args res /\ self = res_state)
  
  predicate postcondition_once_ref_F [@inline:trivial] (self: t_F) (args: UInt32.t) (result: bool) =
    postcondition_F self args result
  
  meta "rewrite_def" predicate postcondition_once_ref_F
  
  predicate resolve_ref_F [@inline:trivial] (_1: t_F) = true
  
  meta "rewrite_def" predicate resolve_ref_F
  
  predicate postcondition_mut_ref_F [@inline:trivial] (self: t_F) (args: UInt32.t) (result_state: t_F) (result: bool) =
    postcondition_F self args result /\ self = result_state
  
  meta "rewrite_def" predicate postcondition_mut_ref_F
  
  function fn_mut_once_ref_F (self: t_F) (args: UInt32.t) (res: bool) : ()
  
  axiom fn_mut_once_ref_F_spec: forall self: t_F, args: UInt32.t, res: bool. postcondition_once_ref_F self args res
      = (exists res_state: t_F. postcondition_mut_ref_F self args res_state res /\ resolve_ref_F res_state)
  
  predicate hist_inv_ref_F [@inline:trivial] (self: t_F) (result_state: t_F) = self = result_state
  
  meta "rewrite_def" predicate hist_inv_ref_F
  
  function hist_inv_trans_ref_F (self: t_F) (b: t_F) (c: t_F) : ()
  
  axiom hist_inv_trans_ref_F_spec: forall self: t_F, b: t_F, c: t_F. hist_inv_ref_F self b
      -> hist_inv_ref_F b c -> hist_inv_ref_F self c
  
  function hist_inv_refl_ref_F (self: t_F) : ()
  
  axiom hist_inv_refl_ref_F_spec: forall self: t_F. hist_inv_ref_F self self
  
  function postcondition_mut_hist_inv_ref_F (self: t_F) (args: UInt32.t) (res_state: t_F) (res: bool) : ()
  
  axiom postcondition_mut_hist_inv_ref_F_spec:
    forall self: t_F, args: UInt32.t, res_state: t_F, res: bool. postcondition_mut_ref_F self args res_state res
      -> hist_inv_ref_F self res_state
  
  function fn_hist_inv_ref_F (self: t_F) (res_state: t_F) : ()
  
  axiom fn_hist_inv_ref_F_spec: forall self: t_F, res_state: t_F. hist_inv_ref_F self res_state = (self = res_state)
  
  predicate postcondition_ref_F [@inline:trivial] (self: t_F) (args: UInt32.t) (result: bool) =
    postcondition_F self args result
  
  meta "rewrite_def" predicate postcondition_ref_F
  
  function fn_once_ref_F (self: t_F) (args: UInt32.t) (res: bool) : ()
  
  axiom fn_once_ref_F_spec: forall self: t_F, args: UInt32.t, res: bool. postcondition_once_ref_F self args res
      = (postcondition_ref_F self args res /\ resolve_ref_F self)
  
  function fn_mut_ref_F (self: t_F) (args: UInt32.t) (res_state: t_F) (res: bool) : ()
  
  axiom fn_mut_ref_F_spec:
    forall self: t_F, args: UInt32.t, res_state: t_F, res: bool. postcondition_mut_ref_F self args res_state res
      = (postcondition_ref_F self args res /\ self = res_state)
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : t_F
  
  constant n : UInt32.t
  
  constant r : bool
  
  function test1_F (x: t_F) (n: UInt32.t) (r: bool) : ()
  
  goal vc_test1_F: ([@expl:test1 ensures #0] postcondition_ref_F x n r = postcondition_F x n r)
    && ([@expl:test1 ensures #1] forall xx: t_F. postcondition_mut_ref_F x n xx r = (postcondition_F x n r /\ x = xx))
    && ([@expl:test1 ensures #2] postcondition_once_ref_F x n r = postcondition_F x n r)
end
module M_test2
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  
  type t_F
  
  predicate postcondition_once_F (self: t_F) (args: UInt32.t) (result: bool)
  
  predicate resolve_F (_1: t_F)
  
  predicate postcondition_mut_F (self: t_F) (args: UInt32.t) (result_state: t_F) (result: bool)
  
  function fn_mut_once_F (self: t_F) (args: UInt32.t) (res: bool) : ()
  
  axiom fn_mut_once_F_spec: forall self: t_F, args: UInt32.t, res: bool. postcondition_once_F self args res
      = (exists res_state: t_F. postcondition_mut_F self args res_state res /\ resolve_F res_state)
  
  predicate hist_inv_F (self: t_F) (result_state: t_F)
  
  function hist_inv_trans_F (self: t_F) (b: t_F) (c: t_F) : ()
  
  axiom hist_inv_trans_F_spec: forall self: t_F, b: t_F, c: t_F. hist_inv_F self b
      -> hist_inv_F b c -> hist_inv_F self c
  
  function hist_inv_refl_F (self: t_F) : ()
  
  axiom hist_inv_refl_F_spec: forall self: t_F. hist_inv_F self self
  
  function postcondition_mut_hist_inv_F (self: t_F) (args: UInt32.t) (res_state: t_F) (res: bool) : ()
  
  axiom postcondition_mut_hist_inv_F_spec:
    forall self: t_F, args: UInt32.t, res_state: t_F, res: bool. postcondition_mut_F self args res_state res
      -> hist_inv_F self res_state
  
  predicate postcondition_once_ref_F [@inline:trivial] (self: MutBorrow.t t_F) (args: UInt32.t) (result: bool) =
    postcondition_mut_F self.current args self.final result
  
  meta "rewrite_def" predicate postcondition_once_ref_F
  
  predicate resolve_ref_F [@inline:trivial] (_1: MutBorrow.t t_F) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_F
  
  predicate postcondition_mut_ref_F [@inline:trivial] (self: MutBorrow.t t_F) (args: UInt32.t) (result_state: MutBorrow.t t_F) (result: bool) =
    postcondition_mut_F self.current args result_state.current result /\ self.final = result_state.final
  
  meta "rewrite_def" predicate postcondition_mut_ref_F
  
  function fn_mut_once_ref_F (self: MutBorrow.t t_F) (args: UInt32.t) (res: bool) : ()
  
  axiom fn_mut_once_ref_F_spec:
    forall self: MutBorrow.t t_F, args: UInt32.t, res: bool. postcondition_once_ref_F self args res
      = (exists res_state: MutBorrow.t t_F. postcondition_mut_ref_F self args res_state res /\ resolve_ref_F res_state)
  
  predicate hist_inv_ref_F [@inline:trivial] (self: MutBorrow.t t_F) (result_state: MutBorrow.t t_F) =
    hist_inv_F self.current result_state.current /\ self.final = result_state.final
  
  meta "rewrite_def" predicate hist_inv_ref_F
  
  function hist_inv_trans_ref_F (self: MutBorrow.t t_F) (b: MutBorrow.t t_F) (c: MutBorrow.t t_F) : ()
  
  axiom hist_inv_trans_ref_F_spec:
    forall self: MutBorrow.t t_F, b: MutBorrow.t t_F, c: MutBorrow.t t_F. hist_inv_ref_F self b
      -> hist_inv_ref_F b c -> hist_inv_ref_F self c
  
  function hist_inv_refl_ref_F (self: MutBorrow.t t_F) : ()
  
  axiom hist_inv_refl_ref_F_spec: forall self: MutBorrow.t t_F. hist_inv_ref_F self self
  
  function postcondition_mut_hist_inv_ref_F (self: MutBorrow.t t_F) (args: UInt32.t) (res_state: MutBorrow.t t_F) (res: bool) : ()
  
  axiom postcondition_mut_hist_inv_ref_F_spec:
    forall self: MutBorrow.t t_F, args: UInt32.t, res_state: MutBorrow.t t_F, res: bool. postcondition_mut_ref_F self args res_state res
      -> hist_inv_ref_F self res_state
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : MutBorrow.t t_F
  
  constant n : UInt32.t
  
  constant r : bool
  
  function test2_F (x: MutBorrow.t t_F) (n: UInt32.t) (r: bool) : ()
  
  goal vc_test2_F: ([@expl:test2 ensures #0] forall xx: MutBorrow.t t_F. postcondition_mut_ref_F x n xx r
        = (postcondition_mut_F x.current n xx.current r /\ x.final = xx.final))
    && ([@expl:test2 ensures #1] postcondition_once_ref_F x n r = postcondition_mut_F x.current n x.final r)
end
