module M_trait_Trait__goo
  use creusot.prelude.MutBorrow
  use creusot.prelude.Any
  
  type t_Self
  
  predicate inv_Self (_1: t_Self)
  
  predicate invariant_ref_Self [@inline:trivial] (self: MutBorrow.t t_Self) =
    inv_Self self.current /\ inv_Self self.final
  
  meta "rewrite_def" predicate invariant_ref_Self
  
  predicate inv_ref_Self [@inline:trivial] (_1: MutBorrow.t t_Self) = invariant_ref_Self _1
  
  meta "rewrite_def" predicate inv_ref_Self
  
  predicate precondition_f (self: ()) (args: MutBorrow.t t_Self)
  
  axiom precondition_fndef:
    forall args: MutBorrow.t t_Self [precondition_f () args]. (let self = args in inv_ref_Self self)
      -> precondition_f () args
  
  type t_FMap_DeepModelTy_DeepModelTy
  
  function deep_model_Self (self: t_Self) : t_FMap_DeepModelTy_DeepModelTy
  
  function deep_model_ref_Self [@inline:trivial] (self: MutBorrow.t t_Self) : t_FMap_DeepModelTy_DeepModelTy =
    deep_model_Self self.current
  
  meta "rewrite_def" function deep_model_ref_Self
  
  predicate postcondition_once_f (self: ()) (args: MutBorrow.t t_Self) (result: ())
  
  axiom postcondition_fndef:
    forall args: MutBorrow.t t_Self, res: () [postcondition_once_f () args res]. postcondition_once_f () args res
      -> (let self = args in deep_model_ref_Self self = deep_model_ref_Self self)
  
  let rec f_Self (self: MutBorrow.t t_Self) (return (x: ())) = {[@expl:f requires] precondition_f () self}
    any [ return (result: ()) -> {postcondition_once_f () self result} (! return {result}) ]
  
  predicate resolve_ref_Self [@inline:trivial] (_1: MutBorrow.t t_Self) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_Self
  
  predicate precondition_goo (self: ()) (args: MutBorrow.t t_Self)
  
  axiom precondition_fndef'0:
    forall args: MutBorrow.t t_Self [precondition_goo () args]. (let self = args in inv_ref_Self self)
      -> precondition_goo () args
  
  predicate postcondition_once_goo (self: ()) (args: MutBorrow.t t_Self) (result: ())
  
  axiom postcondition_fndef'0:
    forall args: MutBorrow.t t_Self, res: () [postcondition_once_goo () args res]. postcondition_once_goo () args res
      -> (let self = args in true)
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec goo_Self (self: MutBorrow.t t_Self) (return (x: ())) = {[@expl:goo 'self' type invariant] inv_ref_Self self}
    (! bb0
    [ bb0 = s0
      [ s0 = {inv_Self self.current}
        MutBorrow.borrow_final <t_Self> {self.current} {MutBorrow.get_id self}
          (fun (_ret: MutBorrow.t t_Self) ->
            [ &_2 <- _ret ] -{inv_Self _ret.final}-
            [ &self <- { self with current = _ret.final } ] s1)
      | s1 = f_Self {_2} (fun (_ret: ()) -> [ &_0 <- _ret ] s2)
      | s2 = bb1 ]
    | bb1 = s0
      [ s0 = {[@expl:type invariant] inv_ref_Self self} s1 | s1 = -{resolve_ref_Self self}- s2 | s2 = return {_0} ] ]
    [ & _0: () = Any.any_l () | & self: MutBorrow.t t_Self = self | & _2: MutBorrow.t t_Self = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
