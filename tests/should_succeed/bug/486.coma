module M_486__test [#"486.rs" 7 0 7 34]
  let%span s486 = "486.rs" 8 11 8 12
  let%span s486'0 = "486.rs" 6 10 6 22
  let%span sresolve = "../../../creusot-contracts/src/resolve.rs" 46 20 46 34
  
  use creusot.int.UInt32
  use creusot.prelude.MutBorrow
  use creusot.prelude.Any
  
  type t_HasMutRef = { t_HasMutRef__0: MutBorrow.t UInt32.t }
  
  predicate resolve (self: MutBorrow.t UInt32.t) = [%#sresolve] self.final = self.current
  
  predicate resolve'0 (_0: MutBorrow.t UInt32.t) = resolve _0
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test [#"486.rs" 7 0 7 34] (x: t_HasMutRef) (return' (x'0: ())) = (! bb0
    [ bb0 = s0
      [ s0 = [ &x'0 <- { t_HasMutRef__0 = { x'0.t_HasMutRef__0 with current = ([%#s486] (5: UInt32.t)) } } ] s1
      | s1 = -{resolve'0 x'0.t_HasMutRef__0}- s2
      | s2 = return''0 {_0} ] ] [ & _0: () = Any.any_l () | & x'0: t_HasMutRef = x ])
    [ return''0 (result: ()) -> {[@expl:test ensures] [%#s486'0] UInt32.t'int (x.t_HasMutRef__0).final = 5}
      (! return' {result}) ]
end
