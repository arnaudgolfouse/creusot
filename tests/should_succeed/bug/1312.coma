module M_1312__foo99 [#"1312.rs" 3 0 3 14]
  let%span s1312 = "1312.rs" 6 29 6 45
  
  use creusot.int.Int32
  use creusot.prelude.Any
  
  type t_Option  =
    | C_None
    | C_Some Int32.t
  
  let rec v_Some (input:t_Option) (ret  (field_0:Int32.t))= any
    [ good (field_0:Int32.t)-> {C_Some field_0 = input} (! ret {field_0})
    | bad -> {forall field_0: Int32.t [C_Some field_0: t_Option]. C_Some field_0 <> input} (! {false} any) ]
  
  
  let rec promoted0__foo99qy58zqy58zqy123zclosureqy35z0qy125z[@coma:extspec] (return'  (x:string))= bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- [%#s1312] "unwrapped None" ] s1 | s1 = return' {_0} ]  ]
     [ & _0: string = Any.any_l () ] 
  
  let rec closure0[#"1312.rs" 4 22 4 38] [@coma:extspec] (self:()) (x:t_Option) (return'  (x'0:Int32.t))= bb0
    [ bb0 = any [ br0 -> {x'0 = C_None} (! bb3) | br1 (x0:Int32.t)-> {x'0 = C_Some x0} (! bb4) ] 
    | bb4 = s0 [ s0 = v_Some {x'0} (fun (r0:Int32.t) ->  [ &y <- r0 ] s1) | s1 =  [ &_0 <- y ] s2 | s2 = return' {_0} ] 
    | bb3 = s0
      [ s0 = promoted0__foo99qy58zqy58zqy123zclosureqy35z0qy125z (fun (pr0:string) ->  [ &_10 <- pr0 ] s1)
      | s1 =  [ &_8 <- _10 ] s2
      | s2 = {false} any ]
     ]
    
    [ & _0: Int32.t = Any.any_l ()
    | & x'0: t_Option = x
    | & y: Int32.t = Any.any_l ()
    | & _8: string = Any.any_l ()
    | & _10: string = Any.any_l () ]
  
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec foo99[#"1312.rs" 3 0 3 14] (return'  (x:()))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_my_closure <- () ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: () = Any.any_l () | & _my_closure: () = Any.any_l () ]  [ return''0 (result:())-> (! return' {result}) ] 
end
