module M_217__ex [#"217.rs" 11 0 11 37]
  let%span s217 = "217.rs" 10 0 10 19
  let%span s217'0 = "217.rs" 12 4 12 50
  let%span sseq = "../../../creusot-contracts/src/logic/seq.rs" 159 4 159 12
  let%span swell_founded = "../../../creusot-contracts/src/logic/well_founded.rs" 45 8 45 33
  
  use seq.Seq
  use mach.int.Int
  
  function tail (self: Seq.seq int) : Seq.seq int = [%#sseq] Seq.([..]) self 1 (Seq.length self)
  
  predicate well_founded_relation (self: int) (other: int) = [%#swell_founded] self >= 0 /\ self > other
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant c : Seq.seq int
  
  constant a : int
  
  function ex [#"217.rs" 11 0 11 37] (c'0: Seq.seq int) (a'0: int) : int
  
  goal vc_ex: if Seq.length c = 0 then
      true
    else
      well_founded_relation ([%#s217] Seq.length c) ([%#s217] Seq.length (tail c))

end
