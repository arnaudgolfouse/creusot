module M_nth_bit_from_left_8
  use creusot.int.UInt8
  use creusot.int.UInt64
  use mach.int.Int
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : UInt8.t
  
  constant left : UInt64.t
  
  predicate nth_bit_from_left_8 (x: UInt8.t) (left: UInt64.t)
  
  goal vc_nth_bit_from_left_8: UInt64.t'int left < 8
    -> (let mask = UInt8.lsl (1: UInt8.t) (UInt64.t'int (UInt64.sub (7: UInt64.t) left)) in true)
end
