module M_1337__qyi4151255744603461468__fmt (* <T as std::fmt::Debug> *)
  use creusot.int.Int8
  use creusot.slice.Slice64
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  use creusot.int.UInt16
  use creusot.prelude.Any
  
  type t_T = C_A Int8.t Int8.t | C_B Int8.t Int8.t Int8.t Int8.t Int8.t Int8.t
  
  let rec v_B (input: t_T)
    (ret (field_0: Int8.t) (field_1: Int8.t) (field_2: Int8.t) (field_3: Int8.t) (field_4: Int8.t) (field_5: Int8.t)) =
    any
    [ good (field_0: Int8.t) (field_1: Int8.t) (field_2: Int8.t) (field_3: Int8.t) (field_4: Int8.t)
      (field_5: Int8.t) -> {C_B field_0 field_1 field_2 field_3 field_4 field_5 = input}
      (! ret {field_0} {field_1} {field_2} {field_3} {field_4} {field_5})
    | bad ->
    {forall field_0: Int8.t, field_1: Int8.t, field_2: Int8.t, field_3: Int8.t, field_4: Int8.t, field_5: Int8.t [C_B field_0 field_1 field_2 field_3 field_4 field_5: t_T]. C_B field_0 field_1 field_2 field_3 field_4 field_5
        <> input}
      (! {false}
      any) ]
  
  type dyn_Debug
  
  function dyn_Debug_of_i8 (x: Int8.t) : dyn_Debug
  
  function dyn_Debug_of_ref_i8 (x: Int8.t) : dyn_Debug
  
  type t_FormattingOptions = {
    t_FormattingOptions__flags: UInt32.t;
    t_FormattingOptions__width: UInt16.t;
    t_FormattingOptions__precision: UInt16.t }
  
  type dyn_Write
  
  type t_Formatter = { t_Formatter__options: t_FormattingOptions; t_Formatter__buf: MutBorrow.t dyn_Write }
  
  type t_Result = C_Ok () | C_Err ()
  
  let rec debug_tuple_fields_finish (self_: MutBorrow.t t_Formatter) (name: string) (values: Slice64.slice dyn_Debug)
    (return (x: t_Result)) = {[@expl:debug_tuple_fields_finish requires] true}
    any [ return' (result: t_Result) -> (! return {result}) ]
  
  predicate resolve [@inline:trivial] (self: MutBorrow.t t_Formatter) = self.final = self.current
  
  meta "rewrite_def" predicate resolve
  
  predicate resolve'0 [@inline:trivial] (_0: MutBorrow.t t_Formatter) = resolve _0
  
  meta "rewrite_def" predicate resolve'0
  
  let rec v_A (input: t_T) (ret (x: Int8.t) (y: Int8.t)) = any
    [ good (x: Int8.t) (y: Int8.t) -> {C_A x y = input} (! ret {x} {y})
    | bad -> {forall x: Int8.t, y: Int8.t [C_A x y: t_T]. C_A x y <> input} (! {false} any) ]
  
  let rec debug_struct_field2_finish (self_: MutBorrow.t t_Formatter) (name: string) (name1: string) (value1: dyn_Debug)
    (name2: string) (value2: dyn_Debug) (return (x: t_Result)) = {[@expl:debug_struct_field2_finish requires] true}
    any [ return' (result: t_Result) -> (! return {result}) ]
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec fmt (self: t_T) (f: MutBorrow.t t_Formatter) (return (x: t_Result)) = (! bb0
    [ bb0 = any
      [ br0 (x0: Int8.t) (x1: Int8.t) -> {self = C_A x0 x1} (! bb4)
      | br1 (x0: Int8.t) (x1: Int8.t) (x2: Int8.t) (x3: Int8.t) (x4: Int8.t) (x5: Int8.t) -> {self
        = C_B x0 x1 x2 x3 x4 x5}
        (! bb3) ]
    | bb3 = s0
      [ s0 = v_B {self}
          (fun (r0: Int8.t) (r1: Int8.t) (r2: Int8.t) (r3: Int8.t) (r4: Int8.t) (r5: Int8.t) ->
            [ &__self_0'0 <- r0 ] s1)
      | s1 = v_B {self}
          (fun (r0: Int8.t) (r1: Int8.t) (r2: Int8.t) (r3: Int8.t) (r4: Int8.t) (r5: Int8.t) ->
            [ &__self_1'0 <- r1 ] s2)
      | s2 = v_B {self}
          (fun (r0: Int8.t) (r1: Int8.t) (r2: Int8.t) (r3: Int8.t) (r4: Int8.t) (r5: Int8.t) -> [ &__self_2 <- r2 ] s3)
      | s3 = v_B {self}
          (fun (r0: Int8.t) (r1: Int8.t) (r2: Int8.t) (r3: Int8.t) (r4: Int8.t) (r5: Int8.t) -> [ &__self_3 <- r3 ] s4)
      | s4 = v_B {self}
          (fun (r0: Int8.t) (r1: Int8.t) (r2: Int8.t) (r3: Int8.t) (r4: Int8.t) (r5: Int8.t) -> [ &__self_4 <- r4 ] s5)
      | s5 = v_B {self}
          (fun (r0: Int8.t) (r1: Int8.t) (r2: Int8.t) (r3: Int8.t) (r4: Int8.t) (r5: Int8.t) -> [ &__self_5 <- r5 ] s6)
      | s6 = [ &_28 <- dyn_Debug_of_i8 __self_0'0 ] s7
      | s7 = [ &_30 <- dyn_Debug_of_i8 __self_1'0 ] s8
      | s8 = [ &_32 <- dyn_Debug_of_i8 __self_2 ] s9
      | s9 = [ &_34 <- dyn_Debug_of_i8 __self_3 ] s10
      | s10 = [ &_36 <- dyn_Debug_of_i8 __self_4 ] s11
      | s11 = [ &_40 <- __self_5 ] s12
      | s12 = [ &_38 <- dyn_Debug_of_ref_i8 _40 ] s13
      | s13 = any
        [ any_ (__arr_temp: Slice64.array dyn_Debug) -> (! -{Seq.get __arr_temp.Slice64.elts 0 = _28
          /\ Seq.get __arr_temp.Slice64.elts 1 = _30
          /\ Seq.get __arr_temp.Slice64.elts 2 = _32
          /\ Seq.get __arr_temp.Slice64.elts 3 = _34
          /\ Seq.get __arr_temp.Slice64.elts 4 = _36
          /\ Seq.get __arr_temp.Slice64.elts 5 = _38 /\ Seq.length __arr_temp.Slice64.elts = 6}-
          [ &_27 <- __arr_temp ] s14) ]
      | s14 = [ &_26 <- _27 ] s15
      | s15 = [ &values <- _26 ] s16
      | s16 = [ &_43 <- "B" ] s17
      | s17 = MutBorrow.borrow_final <t_Formatter> {f.current} {MutBorrow.get_id f}
          (fun (_ret: MutBorrow.t t_Formatter) -> [ &_41 <- _ret ] [ &f <- { f with current = _ret.final } ] s18)
      | s18 = debug_tuple_fields_finish {_41} {_43} {values} (fun (_ret: t_Result) -> [ &_0 <- _ret ] s19)
      | s19 = bb6 ]
    | bb6 = s0 [ s0 = -{resolve'0 f}- s1 | s1 = bb7 ]
    | bb4 = s0
      [ s0 = v_A {self} (fun (rx: Int8.t) (ry: Int8.t) -> [ &__self_0 <- rx ] s1)
      | s1 = v_A {self} (fun (rx: Int8.t) (ry: Int8.t) -> [ &__self_1 <- ry ] s2)
      | s2 = [ &_8 <- "A" ] s3
      | s3 = [ &_10 <- "x" ] s4
      | s4 = [ &_11 <- dyn_Debug_of_i8 __self_0 ] s5
      | s5 = [ &_14 <- "y" ] s6
      | s6 = [ &_17 <- __self_1 ] s7
      | s7 = [ &_15 <- dyn_Debug_of_ref_i8 _17 ] s8
      | s8 = MutBorrow.borrow_final <t_Formatter> {f.current} {MutBorrow.get_id f}
          (fun (_ret: MutBorrow.t t_Formatter) -> [ &_6 <- _ret ] [ &f <- { f with current = _ret.final } ] s9)
      | s9 = debug_struct_field2_finish {_6} {_8} {_10} {_11} {_14} {_15} (fun (_ret: t_Result) -> [ &_0 <- _ret ] s10)
      | s10 = bb5 ]
    | bb5 = s0 [ s0 = -{resolve'0 f}- s1 | s1 = bb7 ]
    | bb7 = return {_0} ]
    [ & _0: t_Result = Any.any_l ()
    | & self: t_T = self
    | & f: MutBorrow.t t_Formatter = f
    | & __self_0: Int8.t = Any.any_l ()
    | & __self_1: Int8.t = Any.any_l ()
    | & _6: MutBorrow.t t_Formatter = Any.any_l ()
    | & _8: string = Any.any_l ()
    | & _10: string = Any.any_l ()
    | & _11: dyn_Debug = Any.any_l ()
    | & _14: string = Any.any_l ()
    | & _15: dyn_Debug = Any.any_l ()
    | & _17: Int8.t = Any.any_l ()
    | & __self_0'0: Int8.t = Any.any_l ()
    | & __self_1'0: Int8.t = Any.any_l ()
    | & __self_2: Int8.t = Any.any_l ()
    | & __self_3: Int8.t = Any.any_l ()
    | & __self_4: Int8.t = Any.any_l ()
    | & __self_5: Int8.t = Any.any_l ()
    | & values: Slice64.slice dyn_Debug = Any.any_l ()
    | & _26: Slice64.array dyn_Debug = Any.any_l ()
    | & _27: Slice64.array dyn_Debug = Any.any_l ()
    | & _28: dyn_Debug = Any.any_l ()
    | & _30: dyn_Debug = Any.any_l ()
    | & _32: dyn_Debug = Any.any_l ()
    | & _34: dyn_Debug = Any.any_l ()
    | & _36: dyn_Debug = Any.any_l ()
    | & _38: dyn_Debug = Any.any_l ()
    | & _40: Int8.t = Any.any_l ()
    | & _41: MutBorrow.t t_Formatter = Any.any_l ()
    | & _43: string = Any.any_l () ]) [ return (result: t_Result) -> (! return {result}) ]
end
