module M_653__omg
  use creusot.int.UInt64
  use creusot.prelude.Any
  use mach.int.Int
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec omg (n: UInt64.t) (return' (x: UInt64.t)) = (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- n'0 ] s1 | s1 = return''0 {_0} ] ]
    [ & _0: UInt64.t = Any.any_l () | & n'0: UInt64.t = n ])
    [ return''0 (result: UInt64.t) -> {[@expl:omg ensures] UInt64.t'int result
      = Int.div (UInt64.t'int n * (UInt64.t'int n + 1)) 2}
      (! return' {result}) ]
end
