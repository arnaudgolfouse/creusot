module M_653__omg [#"653.rs" 8 0 8 29]
  let%span s653 = "653.rs" 7 10 7 38
  
  use creusot.int.UInt64
  use mach.int.Int
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec omg[#"653.rs" 8 0 8 29] (n:UInt64.t) (return'  (x:UInt64.t))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_0 <- n'0 ] s1 | s1 = return''0 {_0} ]  ]
     [ & _0: UInt64.t = Any.any_l () | & n'0: UInt64.t = n ] )
    [ return''0 (result:UInt64.t)-> {[@expl:omg ensures] [%#s653] UInt64.t'int result
      = Int.div (UInt64.t'int n * (UInt64.t'int n + 1)) 2}
      (! return' {result}) ]

end
