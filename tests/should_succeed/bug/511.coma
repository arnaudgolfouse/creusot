module M_511__test_u8
  use creusot.int.UInt8
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_u8 (inp: UInt8.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = UInt64.of_int {UInt8.t'int inp} (fun (_ret_from: UInt64.t) -> [ &_bing <- _ret_from ] s1)
      | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & inp: UInt8.t = inp | & _bing: UInt64.t = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
module M_511__test_u16
  use creusot.int.UInt16
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_u16 (inp: UInt16.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = UInt64.of_int {UInt16.t'int inp} (fun (_ret_from: UInt64.t) -> [ &_bing <- _ret_from ] s1)
      | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & inp: UInt16.t = inp | & _bing: UInt64.t = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
module M_511__test_u128
  use creusot.int.UInt128
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_u128 (inp: UInt128.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = UInt64.of_int {UInt128.t'int inp} (fun (_ret_from: UInt64.t) -> [ &_bing <- _ret_from ] s1)
      | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & inp: UInt128.t = inp | & _bing: UInt64.t = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
module M_511__test_i8
  use creusot.int.Int8
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_i8 (inp: Int8.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = UInt64.of_int {Int8.to_int inp} (fun (_ret_from: UInt64.t) -> [ &_bing <- _ret_from ] s1)
      | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & inp: Int8.t = inp | & _bing: UInt64.t = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
module M_511__test_i16
  use creusot.int.Int16
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_i16 (inp: Int16.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = UInt64.of_int {Int16.to_int inp} (fun (_ret_from: UInt64.t) -> [ &_bing <- _ret_from ] s1)
      | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & inp: Int16.t = inp | & _bing: UInt64.t = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
module M_511__test_i128
  use creusot.int.Int128
  use creusot.int.UInt64
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_i128 (inp: Int128.t) (return (x: ())) = (! bb0
    [ bb0 = s0
      [ s0 = UInt64.of_int {Int128.to_int inp} (fun (_ret_from: UInt64.t) -> [ &_bing <- _ret_from ] s1)
      | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & inp: Int128.t = inp | & _bing: UInt64.t = Any.any_l () ])
    [ return (result: ()) -> (! return {result}) ]
end
