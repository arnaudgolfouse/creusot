module M_1743__qyi7570507176118332595__minimize (* S *)
  use creusot.prelude.MutBorrow
  use creusot.prelude.Opaque
  use creusot.prelude.Ptr
  use creusot.int.UInt64
  use creusot.int.Int32
  use mach.int.Int
  use creusot.int.Int64
  use creusot.prelude.Any
  
  type t_PtrOwn
  
  type t_S = { t_S__perm: t_PtrOwn; t_S__ptr: Opaque.ptr }
  
  predicate is_null_logic (self: Opaque.ptr) = Ptr.addr_logic_u64 self = (0: UInt64.t)
  
  function ptr (self: t_PtrOwn) : Opaque.ptr
  
  predicate ptr_is_aligned_opaque (self: t_PtrOwn)
  
  predicate metadata_matches [@inline:trivial] (_value: Int32.t) (_metadata: ()) = true
  
  meta "rewrite_def" predicate metadata_matches
  
  function val' (self: t_PtrOwn) : Int32.t
  
  function metadata_logic (_1: Opaque.ptr) : ()
  
  constant size_of_i32: int = 4
  
  meta "rewrite_def" constant size_of_i32
  
  axiom size_of_i32_spec: 0 <= size_of_i32
  
  function size_of_val_logic [@inline:trivial] (val''0: Int32.t) : int = size_of_i32
  
  meta "rewrite_def" function size_of_val_logic
  
  axiom size_of_val_logic_spec: forall val''0: Int32.t. 0 <= size_of_val_logic val''0
  
  constant const_MAX: Int64.t = (9223372036854775807: Int64.t)
  
  constant const_MAX'0: UInt64.t = (18446744073709551615: UInt64.t)
  
  predicate inv [@inline:trivial] (_1: Int32.t) = true
  
  meta "rewrite_def" predicate inv
  
  predicate invariant' (self: t_PtrOwn) =
    not is_null_logic (ptr self)
    /\ ptr_is_aligned_opaque self
    /\ metadata_matches (val' self) (metadata_logic (ptr self))
    /\ size_of_val_logic (val' self) <= Int64.to_int const_MAX
    /\ UInt64.t'int (Ptr.addr_logic_u64 (ptr self)) + size_of_val_logic (val' self) <= UInt64.t'int const_MAX'0
    /\ inv (val' self)
  
  predicate inv'0 (_1: t_PtrOwn)
  
  axiom inv_axiom [@rewrite]: forall x: t_PtrOwn [inv'0 x]. inv'0 x = invariant' x
  
  predicate invariant''0 [@inline:trivial] (self: t_PtrOwn) = inv'0 self
  
  meta "rewrite_def" predicate invariant''0
  
  predicate inv'1 [@inline:trivial] (_1: t_PtrOwn) = invariant''0 _1
  
  meta "rewrite_def" predicate inv'1
  
  predicate inv'2 (_1: t_S)
  
  axiom inv_axiom'0 [@rewrite]: forall x: t_S [inv'2 x]. inv'2 x = inv'1 x.t_S__perm
  
  predicate invariant''1 [@inline:trivial] (self: MutBorrow.t t_S) = inv'2 self.current /\ inv'2 self.final
  
  meta "rewrite_def" predicate invariant''1
  
  predicate inv'3 [@inline:trivial] (_1: MutBorrow.t t_S) = invariant''1 _1
  
  meta "rewrite_def" predicate inv'3
  
  predicate resolve [@inline:trivial] (_1: MutBorrow.t t_S) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve
  
  predicate invariant''2 [@inline:trivial] (self: t_PtrOwn) = inv'1 self
  
  meta "rewrite_def" predicate invariant''2
  
  predicate inv'4 [@inline:trivial] (_1: t_PtrOwn) = invariant''2 _1
  
  meta "rewrite_def" predicate inv'4
  
  predicate invariant''3 [@inline:trivial] (self: t_PtrOwn) = inv'0 self
  
  meta "rewrite_def" predicate invariant''3
  
  predicate inv'5 [@inline:trivial] (_1: t_PtrOwn) = invariant''3 _1
  
  meta "rewrite_def" predicate inv'5
  
  let rec deref (self: t_PtrOwn) (return (x: t_PtrOwn)) = {[@expl:deref 'self' type invariant] inv'4 self}
    any [ return (result: t_PtrOwn) -> {inv'5 result} {result = self} (! return {result}) ]
  
  predicate invariant''4 [@inline:trivial] (self: t_PtrOwn) = inv'5 self
  
  meta "rewrite_def" predicate invariant''4
  
  predicate inv'6 [@inline:trivial] (_1: t_PtrOwn) = invariant''4 _1
  
  meta "rewrite_def" predicate inv'6
  
  let rec new (x: t_PtrOwn) (return (x'0: t_PtrOwn)) = {[@expl:new 'x' type invariant] inv'5 x}
    any [ return (result: t_PtrOwn) -> {inv'6 result} {result = x} (! return {result}) ]
  
  let rec as_ref (ptr'0: Opaque.ptr) (own: t_PtrOwn) (return (x: Int32.t)) =
    {[@expl:as_ref 'own' type invariant] inv'6 own}
    {[@expl:as_ref requires] ptr'0 = ptr own}
    any [ return (result: Int32.t) -> {result = val' own} (! return {result}) ]
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec minimize (self: MutBorrow.t t_S) (return (x: ())) = {[@expl:minimize 'self' type invariant] inv'3 self}
    {[@expl:minimize requires #0] Int32.to_int (val' self.current.t_S__perm) = 1}
    {[@expl:minimize requires #1] ptr self.current.t_S__perm = self.current.t_S__ptr}
    (! bb0
    [ bb0 = s0
      [ s0 = {[@expl:type invariant] inv'3 self} s1
      | s1 = -{resolve self}- s2
      | s2 = deref {self.current.t_S__perm} (fun (_ret: t_PtrOwn) -> [ &_9 <- _ret ] s3)
      | s3 = bb1 ]
    | bb1 = s0 [ s0 = [ &_8 <- _9 ] s1 | s1 = new {_8} (fun (_ret: t_PtrOwn) -> [ &_6 <- _ret ] s2) | s2 = bb2 ]
    | bb2 = s0 [ s0 = as_ref {self.current.t_S__ptr} {_6} (fun (_ret: Int32.t) -> [ &r <- _ret ] s1) | s1 = bb4 ]
    | bb4 = bb4 [ bb4 = {[@expl:loop invariant] 0 <= Int32.to_int (val' self.current.t_S__perm)} (! s0) [ s0 = bb4 ] ] ]
    [ & self: MutBorrow.t t_S = self
    | & r: Int32.t = Any.any_l ()
    | & _6: t_PtrOwn = Any.any_l ()
    | & _8: t_PtrOwn = Any.any_l ()
    | & _9: t_PtrOwn = Any.any_l () ]) [ return (result: ()) -> (! return {result}) ]
end
