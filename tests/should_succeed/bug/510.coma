module M_510__test_bool [#"510.rs" 3 0 3 27]
  use creusot.int.UInt8
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  let rec test_bool[#"510.rs" 3 0 3 27] (inp:bool) (return'  (x:()))= (! bb0
    [ bb0 = s0 [ s0 =  [ &_bing <- UInt8.of_bool inp'0 ] s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: () = Any.any_l () | & inp'0: bool = inp | & _bing: UInt8.t = Any.any_l () ] 
    [ return''0 (result:())-> (! return' {result}) ]

end
module M_510__test_char [#"510.rs" 7 0 7 18]
  let%span s510 = "510.rs" 8 4 8 6
  
  use creusot.int.UInt8
  use creusot.prelude.Char
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  let rec test_char[#"510.rs" 7 0 7 18] (return'  (x:()))= (! bb0
    [ bb0 = s0
      [ s0 = Char.of_int {UInt8.t'int ([%#s510] (22: UInt8.t))} (fun (_ret_from:Char.t) ->  [ &_1 <- _ret_from ] s1)
      | s1 = return''0 {_0} ]
     ]
    ) [ & _0: () = Any.any_l () | & _1: Char.t = Any.any_l () ]  [ return''0 (result:())-> (! return' {result}) ] 
end
