module M_1208__qyi15857876851769680003__mul [#"1208.rs" 22 4 22 31] (* Q *)
  let%span s1208 = "1208.rs" 21 14 21 32
  let%span s1208'0 = "1208.rs" 23 8 27 9
  let%span s1208'1 = "1208.rs" 14 8 14 12
  
  use mach.int.Int
  
  type t_Q  =
    | C_Zero
    | C_Frac1 int
  
  predicate invariant' [#"1208.rs" 13 4 13 30] (self: t_Q) =
    [%#s1208'1] true
  
  type tuple  =
    { _p0: t_Q; _p1: t_Q }
  
  constant self  : t_Q
  
  constant y  : t_Q
  
  function mul [#"1208.rs" 22 4 22 31] (self'0: t_Q) (y'0: t_Q) : t_Q
  
  goal vc_mul: match { _p0 = self; _p1 = y } with
    | {_p0 = C_Zero} -> [@expl:mul ensures] [%#s1208] invariant' (C_Zero)
    | {_p1 = C_Zero} -> [@expl:mul ensures] [%#s1208] invariant' (C_Zero)
    | {_p0 = C_Frac1 n ; _p1 = C_Frac1 m} -> [@expl:mul ensures] [%#s1208] invariant' (C_Frac1 (n + m))
    end
end
