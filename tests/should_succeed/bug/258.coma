module M_err
  use creusot.prelude.Any
  use creusot.int.UInt64
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec err (_to: UInt64.t) (return (x: ())) = (! bb0
    [ bb0 = return {_0} ] [ & _0: () = Any.any_l () ]) [ return (result: ()) -> (! return {result}) ]
end
module M_err2
  use creusot.prelude.Any
  use creusot.int.UInt64
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec err2 (_bbb: UInt64.t) (return (x: ())) = (! bb0
    [ bb0 = return {_0} ] [ & _0: () = Any.any_l () ]) [ return (result: ()) -> (! return {result}) ]
end
