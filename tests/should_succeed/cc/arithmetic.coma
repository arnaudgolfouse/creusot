module M_arithmetic__test [#"arithmetic.rs" 5 0 5 13]
  let%span sarithmetic = "arithmetic.rs" 6 18 6 42
  let%span sarithmetic'0 = "arithmetic.rs" 7 18 7 42
  let%span sarithmetic'1 = "arithmetic.rs" 8 18 8 41
  
  use creusot.int.UInt8BW
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test[#"arithmetic.rs" 5 0 5 13] (return'  (x:()))= (! bb0
    [ bb0 = s0
      [ s0 = {[@expl:assertion] [%#sarithmetic] UInt8BW.nth (0: UInt8BW.t) 42 = false} s1
      | s1 = {[@expl:assertion] [%#sarithmetic'0] UInt8BW.nth (42: UInt8BW.t) 0 = false} s2
      | s2 = {[@expl:assertion] [%#sarithmetic'1] UInt8BW.nth (42: UInt8BW.t) 1 = true} s3
      | s3 = return''0 {_0} ]
     ]
    ) [ & _0: () = Any.any_l () ]  [ return''0 (result:())-> (! return' {result}) ] 
end
