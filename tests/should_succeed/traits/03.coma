module M_impl_A_for_i32__f (* <i32 as A> *)
  use creusot.int.Int32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec f_i32 (self: Int32.t) (return (x: Int32.t)) = (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- (0: Int32.t) ] s1 | s1 = return {_0} ] ] [ & _0: Int32.t = Any.any_l () ])
    [ return (result: Int32.t) -> (! return {result}) ]
end
module M_impl_B_for_u32__g (* <u32 as B> *)
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec g_u32 (self: UInt32.t) (return (x: UInt32.t)) = (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- (1: UInt32.t) ] s1 | s1 = return {_0} ] ] [ & _0: UInt32.t = Any.any_l () ])
    [ return (result: UInt32.t) -> (! return {result}) ]
end
module M_impl_C_for_u32__h (* <u32 as C> *)
  use creusot.prelude.Any
  
  type t_G
  
  predicate inv_G (_1: t_G)
  
  predicate invariant_ref_G [@inline:trivial] (self: t_G) = inv_G self
  
  meta "rewrite_def" predicate invariant_ref_G
  
  predicate inv_ref_G [@inline:trivial] (_1: t_G) = invariant_ref_G _1
  
  meta "rewrite_def" predicate inv_ref_G
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec h_u32 (y: t_G) (return (x: t_G)) = {[@expl:h 'y' type invariant] inv_ref_G y}
    (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- y ] s1 | s1 = return {_0} ] ] [ & _0: t_G = Any.any_l () | & y: t_G = y ])
    [ return (result: t_G) -> {[@expl:h result type invariant] inv_ref_G result} (! return {result}) ]
end
module M_impl_B_for_u32__g__refines (* <u32 as B> *)
  use creusot.int.UInt32
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  goal refines: forall self: UInt32.t. forall result: UInt32.t. result = result
end
module M_impl_C_for_u32__h__refines (* <u32 as C> *)
  type t_G
  
  predicate inv_G (_1: t_G)
  
  predicate invariant_ref_G [@inline:trivial] (self: t_G) = inv_G self
  
  meta "rewrite_def" predicate invariant_ref_G
  
  predicate inv_ref_G [@inline:trivial] (_1: t_G) = invariant_ref_G _1
  
  meta "rewrite_def" predicate inv_ref_G
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  goal refines: forall x: t_G. inv_ref_G x -> inv_ref_G x /\ (forall result: t_G. inv_ref_G result -> inv_ref_G result)
end
