module M_09__test [#"09.rs" 7 0 7 43]
  let%span s09 = "09.rs" 8 8 8 9
  
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test [#"09.rs" 7 0 7 43] (t: UInt32.t) (return' (x: UInt32.t)) = (! bb0
    [ bb0 = s0
      [ s0 = UInt32.add {t'0} {[%#s09] (0: UInt32.t)} (fun (_ret: UInt32.t) -> [ &_0 <- _ret ] s1)
      | s1 = return''0 {_0} ] ] [ & _0: UInt32.t = Any.any_l () | & t'0: UInt32.t = t ])
    [ return''0 (result: UInt32.t) -> (! return' {result}) ]
end
module M_09__test2 [#"09.rs" 11 0 11 53]
  let%span s09 = "09.rs" 11 37 11 38
  let%span s09'0 = "09.rs" 11 49 11 53
  
  use creusot.prelude.Any
  
  type t_X
  
  predicate inv (_0: t_X)
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test2 [#"09.rs" 11 0 11 53] (t: t_X) (return' (x: t_X)) = {[@expl:test2 't' type invariant] [%#s09] inv t}
    (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- t'0 ] s1 | s1 = bb1 ] | bb1 = return''0 {_0} ]
    [ & _0: t_X = Any.any_l () | & t'0: t_X = t ])
    [ return''0 (result: t_X) -> {[@expl:test2 result type invariant] [%#s09'0] inv result} (! return' {result}) ]
end
