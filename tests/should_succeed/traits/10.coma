module M_10__qyi9986317399101135331__resolve_coherence (* <Pair<T, U> as creusot_contracts::Resolve> *)
  type t_T
  
  type t_U
  
  type t_Pair = { t_Pair__0: t_T; t_Pair__1: t_U }
  
  predicate resolve (_1: t_T)
  
  predicate resolve'0 (_1: t_U)
  
  predicate structural_resolve (_1: t_Pair) = resolve _1.t_Pair__0 /\ resolve'0 _1.t_Pair__1
  
  predicate resolve'1 (self: t_Pair) = resolve self.t_Pair__0 /\ resolve'0 self.t_Pair__1
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant self : t_Pair
  
  function resolve_coherence (self: t_Pair) : ()
  
  goal vc_resolve_coherence: structural_resolve self -> ([@expl:resolve_coherence ensures] resolve'1 self)
end
module M_10__qyi9986317399101135331__resolve_coherence__refines (* <Pair<T, U> as creusot_contracts::Resolve> *)
  type t_T
  
  type t_U
  
  type t_Pair = { t_Pair__0: t_T; t_Pair__1: t_U }
  
  predicate resolve (_1: t_T)
  
  predicate resolve'0 (_1: t_U)
  
  predicate structural_resolve (_1: t_Pair) = resolve _1.t_Pair__0 /\ resolve'0 _1.t_Pair__1
  
  predicate inv (_1: t_T)
  
  predicate inv'0 (_1: t_U)
  
  predicate inv'1 (_1: t_Pair)
  
  axiom inv_axiom [@rewrite]: forall x: t_Pair [inv'1 x]. inv'1 x = (inv x.t_Pair__0 /\ inv'0 x.t_Pair__1)
  
  predicate resolve'1 (self: t_Pair) = resolve self.t_Pair__0 /\ resolve'0 self.t_Pair__1
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  goal refines: forall self: t_Pair. structural_resolve self /\ inv'1 self
      -> structural_resolve self /\ (forall result: (). resolve'1 self -> resolve'1 self)
end
