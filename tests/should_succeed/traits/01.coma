module M_01__uses_generic [#"01.rs" 8 0 8 38]
  let%span s01 = "01.rs" 8 26 8 27
  
  use creusot.int.UInt32
  use creusot.prelude.Any
  
  type t_T
  
  predicate inv (_0: t_T)
  
  predicate precondition (self: ()) (args: t_T)
  
  axiom precondition_fndef: forall args: t_T [precondition () args]. (let x = args in inv x)  -> precondition () args
  
  predicate postcondition_once (self: ()) (args: t_T) (result: UInt32.t)
  
  axiom postcondition_fndef: forall args: t_T, res: UInt32.t [postcondition_once () args res]. postcondition_once () args res
   -> (let x = args in true)
  
  let rec from_b (x:t_T) (return'  (x'0:UInt32.t))= {[@expl:from_b requires] precondition () x}
    any [ return''0 (result:UInt32.t)-> {postcondition_once () x result} (! return' {result}) ] 
  
  meta "compute_max_steps" 1000000
  
  let rec uses_generic[#"01.rs" 8 0 8 38] (b:t_T) (return'  (x:UInt32.t))= {[@expl:uses_generic 'b' type invariant] [%#s01] inv b}
    (! bb0
    [ bb0 = s0 [ s0 = from_b {b'0} (fun (_ret:UInt32.t) ->  [ &_0 <- _ret ] s1) | s1 = bb1 ] 
    | bb1 = bb2
    | bb2 = return''0 {_0} ]
    ) [ & _0: UInt32.t = Any.any_l () | & b'0: t_T = b ]  [ return''0 (result:UInt32.t)-> (! return' {result}) ] 
end
