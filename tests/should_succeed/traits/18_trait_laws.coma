module M_18_trait_laws__uses_op
  type t_T
  
  function op (self: t_T) (_1: t_T) : t_T
  
  function reflexive (a: t_T) (b: t_T) : ()
  
  axiom reflexive_spec: forall a: t_T, b: t_T. op a b = op b a
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : t_T
  
  constant y : t_T
  
  predicate uses_op (x'0: t_T) (y'0: t_T)
  
  goal vc_uses_op: [@expl:uses_op ensures] (op x y = op y x) = true
end
module M_18_trait_laws__qyi15007366726265329150__reflexive (* <() as Symmetric> *)
  function op (self: ()) (_1: ()) : () = ()
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant a : ()
  
  constant b : ()
  
  function reflexive (a'0: ()) (b'0: ()) : ()
  
  goal vc_reflexive: [@expl:reflexive ensures] op a b = op b a
end
module M_18_trait_laws__impl_laws
  function op (self: ()) (_1: ()) : () = ()
  
  function reflexive (a: ()) (b: ()) : () = ()
  
  axiom reflexive_spec: forall a: (), b: (). op a b = op b a
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  predicate impl_laws
  
  goal vc_impl_laws: [@expl:impl_laws ensures] (op () () = op () ()) = true
end
module M_18_trait_laws__qyi15007366726265329150__reflexive__refines (* <() as Symmetric> *)
  function op (self: ()) (_1: ()) : () = ()
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  goal refines: forall a: (). forall b: (). forall result: (). op a b = op b a -> op a b = op b a
end
