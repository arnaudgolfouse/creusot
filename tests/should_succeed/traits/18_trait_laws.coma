module M_18_trait_laws__uses_op [#"18_trait_laws.rs" 17 0 17 48]
  let%span s18_trait_laws = "18_trait_laws.rs" 16 10 16 24
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 18 16 18 34
  let%span s18_trait_laws'1 = "18_trait_laws.rs" 10 14 10 32
  
  type t_T
  
  function op [#"18_trait_laws.rs" 7 4 7 42] (self: t_T) (_1: t_T) : t_T
  
  function reflexive [#"18_trait_laws.rs" 11 4 11 35] (a: t_T) (b: t_T) : ()
  
  axiom reflexive_spec: forall a: t_T, b: t_T. [%#s18_trait_laws'1] op a b = op b a
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant x : t_T
  
  constant y : t_T
  
  predicate uses_op [#"18_trait_laws.rs" 17 0 17 48] (x'0: t_T) (y'0: t_T)
  
  goal vc_uses_op: [@expl:uses_op ensures] [%#s18_trait_laws] (op x y = op y x) = true
end
module M_18_trait_laws__qyi15007366726265329150__reflexive [#"18_trait_laws.rs" 31 4 31 34] (* <() as Symmetric> *)
  let%span s18_trait_laws = "18_trait_laws.rs" 30 14 30 32
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 31 35 31 37
  let%span s18_trait_laws'1 = "18_trait_laws.rs" 25 8 25 11
  
  function op [#"18_trait_laws.rs" 24 4 24 41] (self: ()) (_1: ()) : () = [%#s18_trait_laws'1] ()
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  constant a : ()
  
  constant b : ()
  
  function reflexive [#"18_trait_laws.rs" 31 4 31 34] (a'0: ()) (b'0: ()) : ()
  
  goal vc_reflexive: [@expl:reflexive ensures] [%#s18_trait_laws] op a b = op b a
end
module M_18_trait_laws__impl_laws [#"18_trait_laws.rs" 37 0 37 26]
  let%span s18_trait_laws = "18_trait_laws.rs" 36 10 36 24
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 38 16 38 38
  let%span s18_trait_laws'1 = "18_trait_laws.rs" 25 8 25 11
  let%span s18_trait_laws'2 = "18_trait_laws.rs" 30 14 30 32
  let%span s18_trait_laws'3 = "18_trait_laws.rs" 31 35 31 37
  
  function op [#"18_trait_laws.rs" 24 4 24 41] (self: ()) (_1: ()) : () = [%#s18_trait_laws'1] ()
  
  function reflexive [#"18_trait_laws.rs" 31 4 31 34] (a: ()) (b: ()) : () = [%#s18_trait_laws'3] ()
  
  axiom reflexive_spec: forall a: (), b: (). [%#s18_trait_laws'2] op a b = op b a
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  predicate impl_laws [#"18_trait_laws.rs" 37 0 37 26]
  
  goal vc_impl_laws: [@expl:impl_laws ensures] [%#s18_trait_laws] (op () () = op () ()) = true
end
module M_18_trait_laws__qyi15007366726265329150__reflexive__refines [#"18_trait_laws.rs" 31 4 31 34] (* <() as Symmetric> *)
  let%span s18_trait_laws = "18_trait_laws.rs" 31 4 31 34
  let%span s18_trait_laws'0 = "18_trait_laws.rs" 25 8 25 11
  
  function op [#"18_trait_laws.rs" 24 4 24 41] (self: ()) (_1: ()) : () = [%#s18_trait_laws'0] ()
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  goal refines: [%#s18_trait_laws] forall a: (). forall b: (). forall result: (). op a b = op b a -> op a b = op b a
end
