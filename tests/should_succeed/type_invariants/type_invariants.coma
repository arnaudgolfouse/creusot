module M_type_invariants__id [#"type_invariants.rs" 14 0 14 44]
  let%span stype_invariants = "type_invariants.rs" 14 10 14 11
  let%span stype_invariants'0 = "type_invariants.rs" 14 31 14 44
  let%span stype_invariants'1 = "type_invariants.rs" 10 8 10 12
  
  use creusot.prelude.Any
  
  predicate invariant' [#"type_invariants.rs" 9 4 9 30] (self: ()) =
    [%#stype_invariants'1] true
  
  predicate inv (_0: ())
  
  axiom inv_axiom [@rewrite]: forall x: () [inv x]. inv x
  = (invariant' x
  /\ match x with
    | () -> true
    end)
  
  meta "compute_max_steps" 1000000
  
  let rec id[#"type_invariants.rs" 14 0 14 44] (x:()) (return'  (x'0:()))= {[@expl:id 'x' type invariant] [%#stype_invariants] inv x}
    (! bb0 [ bb0 = s0 [ s0 =  [ &_0 <- x'0 ] s1 | s1 = return''0 {_0} ]  ] )
    [ & _0: () = Any.any_l () | & x'0: () = x ]
    
    [ return''0 (result:())-> {[@expl:id result type invariant] [%#stype_invariants'0] inv result}
      (! return' {result}) ]

end
