module M_type_invariants__id
  use creusot.prelude.Any
  
  predicate invariant' (self: ()) = true
  
  predicate inv [@inline:trivial] (_1: ()) = invariant' _1
  
  meta "rewrite_def" predicate inv
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec id (x: ()) (return (x'0: ())) = {[@expl:id 'x' type invariant] inv x}
    (! bb0
    [ bb0 = s0 [ s0 = [ &_0 <- x ] s1 | s1 = return {_0} ] ] [ & _0: () = Any.any_l () | & x: () = x ])
    [ return (result: ()) -> {[@expl:id result type invariant] inv result} (! return {result}) ]
end
