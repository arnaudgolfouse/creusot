module M_trait__uses_custom [#"trait.rs" 9 0 9 54]
  let%span strait = "trait.rs" 9 48 9 50
  
  use creusot.prelude.Any
  
  type t_T
  
  predicate inv (_0: t_T)
  
  predicate resolve (_0: t_T)
  
  meta "compute_max_steps" 1000000
  
  let rec uses_custom[#"trait.rs" 9 0 9 54] (_t:t_T) (return'  (x:()))= {[@expl:uses_custom '_t' type invariant] [%#strait] inv _t}
    (! bb0
    [ bb0 = s0 [ s0 = {[@expl:type invariant] inv _t'0} s1 | s1 = -{resolve _t'0}- s2 | s2 = bb1 ] 
    | bb1 = return''0 {_0} ]
    ) [ & _0: () = Any.any_l () | & _t'0: t_T = _t ]  [ return''0 (result:())-> (! return' {result}) ] 
end
module M_trait__uses_custom2 [#"trait.rs" 13 0 13 61]
  let%span strait = "trait.rs" 13 55 13 57
  
  use creusot.prelude.Any
  
  type t_T
  
  predicate inv (_0: t_T)
  
  predicate resolve (_0: t_T)
  
  meta "compute_max_steps" 1000000
  
  let rec uses_custom2[#"trait.rs" 13 0 13 61] (_t:t_T) (return'  (x:()))= {[@expl:uses_custom2 '_t' type invariant] [%#strait] inv _t}
    (! bb0
    [ bb0 = s0 [ s0 = {[@expl:type invariant] inv _t'0} s1 | s1 = -{resolve _t'0}- s2 | s2 = bb1 ] 
    | bb1 = return''0 {_0} ]
    ) [ & _0: () = Any.any_l () | & _t'0: t_T = _t ]  [ return''0 (result:())-> (! return' {result}) ] 
end
