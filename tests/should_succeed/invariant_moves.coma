module M_test_invariant_move
  use creusot.prelude.MutBorrow
  use creusot.int.UInt32
  use seq.Seq
  use creusot.int.UInt64
  use mach.int.Int
  use creusot.prelude.Any
  
  type t_Vec_u32_Global
  
  type t_Option_u32 = None | Some UInt32.t
  
  constant const_MAX: UInt64.t = (18446744073709551615: UInt64.t)
  
  function view_Vec_u32_Global (self: t_Vec_u32_Global) : Seq.seq UInt32.t
  
  axiom view_Vec_u32_Global_spec: forall self: t_Vec_u32_Global. Seq.length (view_Vec_u32_Global self)
      <= UInt64.t'int const_MAX
  
  let rec pop_u32 (self_: MutBorrow.t t_Vec_u32_Global) (return (x: t_Option_u32)) = any
    [ return (result: t_Option_u32) -> {match result with
        | Some t -> view_Vec_u32_Global self_.final
          = Seq.([..]) (view_Vec_u32_Global self_.current) 0 (Seq.length (view_Vec_u32_Global self_.current) - 1)
        /\ view_Vec_u32_Global self_.current = Seq.snoc (view_Vec_u32_Global self_.final) t
        | None -> self_.current = self_.final /\ Seq.length (view_Vec_u32_Global self_.current) = 0
        end}
      (! return {result}) ]
  
  predicate resolve_ref_Vec_u32_Global [@inline:trivial] (_1: MutBorrow.t t_Vec_u32_Global) = _1.final = _1.current
  
  meta "rewrite_def" predicate resolve_ref_Vec_u32_Global
  
  meta "compute_max_steps" 1000000
  
  meta "select_lsinst" "all"
  
  let rec test_invariant_move (x: t_Vec_u32_Global) (return (x'0: ())) = (! bb0
    [ bb0 = bb1
    | bb1 = bb1
      [ bb1 = {[@expl:loop invariant] x = x}
        (! s0)
        [ s0 = bb2 ]
        [ bb2 = s0
          [ s0 = MutBorrow.borrow_mut <t_Vec_u32_Global> {x}
              (fun (_ret: MutBorrow.t t_Vec_u32_Global) -> [ &_7 <- _ret ] [ &x <- _ret.final ] s1)
          | s1 = MutBorrow.borrow_final <t_Vec_u32_Global> {_7.current} {MutBorrow.get_id _7}
              (fun (_ret: MutBorrow.t t_Vec_u32_Global) ->
                [ &_6 <- _ret ] [ &_7 <- { _7 with current = _ret.final } ] s2)
          | s2 = pop_u32 {_6} (fun (_ret: t_Option_u32) -> [ &_5 <- _ret ] s3)
          | s3 = bb3 ]
        | bb3 = s0
          [ s0 = -{resolve_ref_Vec_u32_Global _7}- s1
          | s1 = any [ br0 -> {_5 = None} (! bb7) | br1 (x0: UInt32.t) -> {_5 = Some x0} (! bb1) ] ] ] ]
    | bb7 = return {_0} ]
    [ & _0: () = Any.any_l ()
    | & x: t_Vec_u32_Global = x
    | & _5: t_Option_u32 = Any.any_l ()
    | & _6: MutBorrow.t t_Vec_u32_Global = Any.any_l ()
    | & _7: MutBorrow.t t_Vec_u32_Global = Any.any_l () ]) [ return (result: ()) -> (! return {result}) ]
end
