module M_opaque_unproveable__test [#"opaque_unproveable.rs" 15 0 15 13]
  let%span sopaque_unproveable = "opaque_unproveable.rs" 17 18 17 29
  
  use creusot.prelude.Any
  
  predicate opaque [#"opaque_unproveable.rs" 10 4 10 27] 
  
  meta "compute_max_steps" 1000000
  
  let rec test[#"opaque_unproveable.rs" 15 0 15 13] (return'  (x:()))= (! bb0
    [ bb0 = s0 [ s0 = {[@expl:assertion] [%#sopaque_unproveable] opaque} s1 | s1 = return''0 {_0} ]  ]
    ) [ & _0: () = Any.any_l () ]  [ return''0 (result:())-> (! return' {result}) ] 
end
