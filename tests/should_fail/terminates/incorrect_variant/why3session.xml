<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.15.3" timelimit="0.5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.6.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma">
<path name=".."/><path name="incorrect_variant.coma"/>
<theory name="M_incorrect_variant__incorrect_recursion">
 <goal name="vc_incorrect_recursion">
 <transf name="split_vc" >
  <goal name="vc_incorrect_recursion.0" expl="remainder by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.018020" steps="6286"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.1" expl="Rem overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017507" steps="6547"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.016136" steps="1738"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017501" steps="1757"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.023770" steps="21309"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.5" expl="function variant" proved="true">
  <proof prover="0"><result status="valid" time="0.008299" steps="5983"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.013067" steps="21299"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.7" expl="function variant">
  <transf name="inline_goal" >
   <goal name="vc_incorrect_recursion.7.0" expl="function variant">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_recursion.7.0.0" expl="function variant">
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion.7.0.0.0" expl="function variant">
     <proof prover="0" timelimit="1"><result status="timeout" time="1.000000" steps="2279533"/></proof>
     <proof prover="1"><result status="unknown" time="0.106825" steps="33712"/></proof>
     <proof prover="2"><result status="unknown" time="0.180509" steps="20998"/></proof>
     <proof prover="3"><result status="unknown" time="0.114569" steps="1527"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_incorrect_variant__incorrect_recursion_logic">
 <goal name="vc_incorrect_recursion_logic">
 <transf name="split_vc" >
  <goal name="vc_incorrect_recursion_logic.0" expl="incorrect_recursion_logic ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.016069" steps="11"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion_logic.1">
  <transf name="inline_goal" >
   <goal name="vc_incorrect_recursion_logic.1.0">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_recursion_logic.1.0.0">
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion_logic.1.0.0.0">
     <proof prover="0" timelimit="1"><result status="timeout" time="1.000000" steps="9590005"/></proof>
     <proof prover="1"><result status="unknown" time="0.030377" steps="3463"/></proof>
     <proof prover="2"><result status="unknown" time="0.048991" steps="9176"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000" steps="13649"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_incorrect_recursion_logic.1.0.1">
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion_logic.1.0.1.0">
     <proof prover="0" timelimit="1"><result status="timeout" time="1.000000" steps="9356360"/></proof>
     <proof prover="1"><result status="unknown" time="0.019547" steps="3466"/></proof>
     <proof prover="2"><result status="unknown" time="0.033681" steps="9096"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000" steps="8976"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_incorrect_recursion_logic.2" expl="incorrect_recursion_logic ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.013225" steps="751"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion_logic.3">
  <transf name="inline_goal" >
   <goal name="vc_incorrect_recursion_logic.3.0">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_recursion_logic.3.0.0">
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion_logic.3.0.0.0">
     <proof prover="0" timelimit="1"><result status="timeout" time="1.000000" steps="2012022"/></proof>
     <proof prover="1"><result status="unknown" time="0.028513" steps="3415"/></proof>
     <proof prover="2"><result status="unknown" time="0.056661" steps="9395"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000" steps="10861"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_incorrect_recursion_logic.3.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.011211" steps="902"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_incorrect_recursion_logic.4" expl="incorrect_recursion_logic ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.009189" steps="763"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_incorrect_variant__incorrect_loop_variant">
 <goal name="vc_incorrect_loop_variant">
 <transf name="split_vc" >
  <goal name="vc_incorrect_loop_variant.0" expl="remainder by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.016341" steps="6262"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.1" expl="Rem overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016806" steps="6523"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.013858" steps="1714"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017106" steps="1733"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.014233" steps="21285"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.5" expl="loop variant" proved="true">
  <proof prover="0"><result status="valid" time="0.019134" steps="5959"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.012658" steps="21275"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.7" expl="loop variant">
  <transf name="inline_goal" >
   <goal name="vc_incorrect_loop_variant.7.0" expl="loop variant">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_loop_variant.7.0.0" expl="loop variant">
    <transf name="inline_goal" >
     <goal name="vc_incorrect_loop_variant.7.0.0.0" expl="loop variant">
     <proof prover="0" timelimit="1"><result status="timeout" time="1.000000" steps="3052555"/></proof>
     <proof prover="1"><result status="unknown" time="0.133827" steps="33700"/></proof>
     <proof prover="2"><result status="unknown" time="0.158531" steps="20990"/></proof>
     <proof prover="3"><result status="unknown" time="0.071841" steps="1532"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
