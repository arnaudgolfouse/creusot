<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="0.5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="3" steplimit="0" memlimit="2000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="3" steplimit="0" memlimit="2000"/>
<prover id="3" name="Alt-Ergo" version="2.6.0" timelimit="3" steplimit="0" memlimit="2000"/>
<file format="coma">
<path name=".."/><path name="incorrect_variant.coma"/>
<theory name="M_incorrect_variant__incorrect_recursion">
 <goal name="vc_incorrect_recursion">
 <proof prover="0"><result status="timeout" time="0.500000" steps="10524812"/></proof>
 <transf name="split_vc" >
  <goal name="vc_incorrect_recursion.0" expl="remainder by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.018020" steps="5794"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.1" expl="Rem overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017507" steps="6031"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.016136" steps="1742"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017501" steps="1761"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.023770" steps="20825"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.5" expl="function variant" proved="true">
  <proof prover="0"><result status="valid" time="0.008299" steps="5476"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.013067" steps="20794"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion.7" expl="function variant">
  <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="11620752"/></proof>
  <proof prover="1"><result status="unknown" time="0.074264" steps="30769"/></proof>
  <proof prover="2"><result status="unknown" time="0.082593" steps="24100"/></proof>
  <proof prover="3"><result status="unknown" time="0.064506" steps="1532"/></proof>
  <transf name="inline_goal" >
   <goal name="vc_incorrect_recursion.7.0" expl="function variant">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_recursion.7.0.0" expl="function variant">
    <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="16236007"/></proof>
    <proof prover="1"><result status="unknown" time="0.063330" steps="33712"/></proof>
    <proof prover="2"><result status="unknown" time="0.100450" steps="29841"/></proof>
    <proof prover="3"><result status="unknown" time="0.066967" steps="1527"/></proof>
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion.7.0.0.0" expl="function variant">
     <proof prover="0" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="39618709"/></proof>
     <proof prover="1" timelimit="6" memlimit="4000"><result status="unknown" time="0.138767" steps="33712"/></proof>
     <proof prover="2" timelimit="6" memlimit="4000"><result status="unknown" time="0.176341" steps="29841"/></proof>
     <proof prover="3" timelimit="6" memlimit="4000"><result status="unknown" time="0.127071" steps="1527"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_incorrect_variant__incorrect_recursion_logic">
 <goal name="vc_incorrect_recursion_logic">
 <proof prover="0"><result status="timeout" time="0.500000" steps="15569843"/></proof>
 <transf name="split_vc" >
  <goal name="vc_incorrect_recursion_logic.0" expl="incorrect_recursion_logic ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.016069" steps="11"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion_logic.1">
  <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="27786921"/></proof>
  <proof prover="1"><result status="unknown" time="0.016544" steps="2867"/></proof>
  <proof prover="2"><result status="unknown" time="0.049010" steps="8777"/></proof>
  <proof prover="3"><result status="timeout" time="3.000000" steps="66741"/></proof>
  <transf name="inline_goal" >
   <goal name="vc_incorrect_recursion_logic.1.0">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_recursion_logic.1.0.0">
    <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="33235493"/></proof>
    <proof prover="1"><result status="unknown" time="0.016116" steps="3463"/></proof>
    <proof prover="2"><result status="unknown" time="0.031748" steps="9101"/></proof>
    <proof prover="3"><result status="timeout" time="3.000000" steps="119372"/></proof>
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion_logic.1.0.0.0">
     <proof prover="0" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="52508287"/></proof>
     <proof prover="1" timelimit="6" memlimit="4000"><result status="unknown" time="0.030377" steps="3463"/></proof>
     <proof prover="2" timelimit="6" memlimit="4000"><result status="unknown" time="0.048991" steps="9101"/></proof>
     <proof prover="3" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="182320"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_incorrect_recursion_logic.1.0.1">
    <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="25358258"/></proof>
    <proof prover="1"><result status="unknown" time="0.026583" steps="3466"/></proof>
    <proof prover="2"><result status="unknown" time="0.048504" steps="9054"/></proof>
    <proof prover="3"><result status="timeout" time="3.000000" steps="59735"/></proof>
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion_logic.1.0.1.0">
     <proof prover="0" timelimit="6" memlimit="4000"><result status="unknown" time="2.860857" steps="25358258"/></proof>
     <proof prover="1" timelimit="6" memlimit="4000"><result status="unknown" time="0.019547" steps="3466"/></proof>
     <proof prover="2" timelimit="6" memlimit="4000"><result status="unknown" time="0.033681" steps="9054"/></proof>
     <proof prover="3" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="136853"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_incorrect_recursion_logic.2" expl="incorrect_recursion_logic ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.013225" steps="751"/></proof>
  </goal>
  <goal name="vc_incorrect_recursion_logic.3">
  <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="16546587"/></proof>
  <proof prover="1"><result status="unknown" time="0.025376" steps="2857"/></proof>
  <proof prover="2"><result status="unknown" time="0.049456" steps="8857"/></proof>
  <proof prover="3"><result status="timeout" time="3.000000" steps="109597"/></proof>
  <transf name="inline_goal" >
   <goal name="vc_incorrect_recursion_logic.3.0">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_recursion_logic.3.0.0">
    <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="7535323"/></proof>
    <proof prover="1"><result status="unknown" time="0.029246" steps="3415"/></proof>
    <proof prover="2"><result status="unknown" time="0.052397" steps="9078"/></proof>
    <proof prover="3"><result status="timeout" time="3.000000" steps="65127"/></proof>
    <transf name="inline_goal" >
     <goal name="vc_incorrect_recursion_logic.3.0.0.0">
     <proof prover="0" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="15362329"/></proof>
     <proof prover="1" timelimit="6" memlimit="4000"><result status="unknown" time="0.028513" steps="3415"/></proof>
     <proof prover="2" timelimit="6" memlimit="4000"><result status="unknown" time="0.056661" steps="9078"/></proof>
     <proof prover="3" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="97364"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_incorrect_recursion_logic.3.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.011211" steps="902"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_incorrect_recursion_logic.4" expl="incorrect_recursion_logic ensures" proved="true">
  <proof prover="0"><result status="valid" time="0.009189" steps="763"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_incorrect_variant__incorrect_loop_variant">
 <goal name="vc_incorrect_loop_variant">
 <proof prover="0"><result status="timeout" time="0.500000" steps="5481461"/></proof>
 <transf name="split_vc" >
  <goal name="vc_incorrect_loop_variant.0" expl="remainder by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.016341" steps="5770"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.1" expl="Rem overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.016806" steps="6007"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.013858" steps="1718"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.017106" steps="1737"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.014233" steps="20801"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.5" expl="loop variant" proved="true">
  <proof prover="0"><result status="valid" time="0.019134" steps="5452"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.012658" steps="20770"/></proof>
  </goal>
  <goal name="vc_incorrect_loop_variant.7" expl="loop variant">
  <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="11524214"/></proof>
  <proof prover="1"><result status="unknown" time="0.071225" steps="30757"/></proof>
  <proof prover="2"><result status="unknown" time="0.080207" steps="24097"/></proof>
  <proof prover="3"><result status="unknown" time="0.079062" steps="1532"/></proof>
  <transf name="inline_goal" >
   <goal name="vc_incorrect_loop_variant.7.0" expl="loop variant">
   <transf name="split_all_full" >
    <goal name="vc_incorrect_loop_variant.7.0.0" expl="loop variant">
    <proof prover="0" timelimit="3" memlimit="2000"><result status="timeout" time="3.000000" steps="11161839"/></proof>
    <proof prover="1"><result status="unknown" time="0.108225" steps="33700"/></proof>
    <proof prover="2"><result status="unknown" time="0.119900" steps="29838"/></proof>
    <proof prover="3"><result status="unknown" time="0.074803" steps="1532"/></proof>
    <transf name="inline_goal" >
     <goal name="vc_incorrect_loop_variant.7.0.0.0" expl="loop variant">
     <proof prover="0" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="22546385"/></proof>
     <proof prover="1" timelimit="6" memlimit="4000"><result status="unknown" time="0.087590" steps="33700"/></proof>
     <proof prover="2" timelimit="6" memlimit="4000"><result status="unknown" time="0.083787" steps="29838"/></proof>
     <proof prover="3" timelimit="6" memlimit="4000"><result status="unknown" time="0.060302" steps="1532"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
